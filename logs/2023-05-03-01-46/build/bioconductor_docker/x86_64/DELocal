+ Rscript -e 'Sys.setenv(BIOCONDUCTOR_USE_CONTAINER_REPOSITORY=FALSE); p <- .libPaths(); p <- c('\''/tmp/tmp/built'\'', p); .libPaths(p); if(BiocManager::install('\''DELocal'\'', INSTALL_opts = '\''--build'\'', update = TRUE, quiet = FALSE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
'getOption("repos")' replaces Bioconductor standard repositories, see
'help("repositories", package = "BiocManager")' for details.
Replacement repositories:
    CRAN: https://packagemanager.posit.co/cran/__linux__/jammy/latest
Bioconductor version 3.17 (BiocManager 1.30.20), R 4.3.0 (2023-04-21)
Installing package(s) 'DELocal'
also installing the dependencies ‘plyr’, ‘reshape2’

trying URL 'https://packagemanager.posit.co/cran/__linux__/jammy/latest/src/contrib/plyr_1.8.8.tar.gz'
Content type 'binary/octet-stream' length 822215 bytes (802 KB)
==================================================
downloaded 802 KB

trying URL 'https://packagemanager.posit.co/cran/__linux__/jammy/latest/src/contrib/reshape2_1.4.4.tar.gz'
Content type 'binary/octet-stream' length 115092 bytes (112 KB)
==================================================
downloaded 112 KB

trying URL 'https://bioconductor.org/packages/3.17/bioc/src/contrib/DELocal_1.0.0.tar.gz'
Content type 'application/x-gzip' length 2429817 bytes (2.3 MB)
==================================================
downloaded 2.3 MB

* installing *binary* package ‘plyr’ ...
* ‘plyr’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘plyr’ as ‘plyr_1.8.8_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (plyr)
* installing *binary* package ‘reshape2’ ...
* ‘reshape2’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘reshape2’ as ‘reshape2_1.4.4_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (reshape2)
* installing *source* package ‘DELocal’ ...
** using staged installation
** R
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
*** copying figures
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘DELocal’ as ‘DELocal_1.0.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (DELocal)

The downloaded source packages are in
	‘/tmp/RtmplPBTff/downloaded_packages’
Old packages: 'cachem', 'waldo'

real	0m26.574s
user	0m23.528s
sys	0m1.777s
* installing *binary* package ‘bcp’ ...
* ‘bcp’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘bcp’ as ‘bcp_4.0.3_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (bcp)
* installing *binary* package ‘zoo’ ...
* ‘zoo’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘zoo’ as ‘zoo_1.8-12_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (zoo)
* installing *binary* package ‘RcppDE’ ...
* ‘RcppDE’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘RcppDE’ as ‘RcppDE_0.1.7_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (RcppDE)
* installing *binary* package ‘SparseM’ ...
* ‘SparseM’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘SparseM’ as ‘SparseM_1.81_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (SparseM)
* installing *binary* package ‘MatrixModels’ ...
* ‘MatrixModels’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘MatrixModels’ as ‘MatrixModels_0.5-1_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (MatrixModels)
* installing *binary* package ‘DEoptimR’ ...
* ‘DEoptimR’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘DEoptimR’ as ‘DEoptimR_1.0-12_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (DEoptimR)
* installing *binary* package ‘outliers’ ...
* ‘outliers’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘outliers’ as ‘outliers_0.15_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (outliers)
* installing *binary* package ‘Rfit’ ...
* ‘Rfit’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘Rfit’ as ‘Rfit_0.24.2_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (Rfit)
* installing *binary* package ‘signal’ ...
* ‘signal’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘signal’ as ‘signal_0.7-7_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (signal)
* installing *binary* package ‘lmtest’ ...
* ‘lmtest’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘lmtest’ as ‘lmtest_0.9-40_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (lmtest)
* installing *binary* package ‘ptw’ ...
* ‘ptw’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘ptw’ as ‘ptw_1.9-16_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (ptw)
* installing *binary* package ‘quantreg’ ...
* ‘quantreg’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘quantreg’ as ‘quantreg_5.95_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (quantreg)
* installing *binary* package ‘robustbase’ ...
* ‘robustbase’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘robustbase’ as ‘robustbase_0.95-1_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (robustbase)
* installing *binary* package ‘chipPCR’ ...
* ‘chipPCR’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘chipPCR’ as ‘chipPCR_1.0-2_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (chipPCR)
* installing *binary* package ‘misc3d’ ...
* ‘misc3d’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘misc3d’ as ‘misc3d_0.9-1_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (misc3d)
* installing *binary* package ‘mvtnorm’ ...
* ‘mvtnorm’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘mvtnorm’ as ‘mvtnorm_1.1-3_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (mvtnorm)
* installing *binary* package ‘ash’ ...
* ‘ash’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘ash’ as ‘ash_1.0-15_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (ash)
* installing *binary* package ‘FNN’ ...
* ‘FNN’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘FNN’ as ‘FNN_1.1.3.2_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (FNN)
* installing *binary* package ‘kernlab’ ...
* ‘kernlab’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘kernlab’ as ‘kernlab_0.9-32_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (kernlab)
* installing *binary* package ‘mclust’ ...
* ‘mclust’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘mclust’ as ‘mclust_6.0.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (mclust)
* installing *binary* package ‘multicool’ ...
* ‘multicool’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘multicool’ as ‘multicool_0.1-12_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (multicool)
* installing *binary* package ‘pracma’ ...
* ‘pracma’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘pracma’ as ‘pracma_2.4.2_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (pracma)
* installing *binary* package ‘deSolve’ ...
* ‘deSolve’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘deSolve’ as ‘deSolve_1.35_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (deSolve)
* installing *binary* package ‘SuppDists’ ...
* ‘SuppDists’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘SuppDists’ as ‘SuppDists_1.1-9.7_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (SuppDists)
* installing *binary* package ‘iterators’ ...
* ‘iterators’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘iterators’ as ‘iterators_1.0.14_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (iterators)
* installing *binary* package ‘plot3D’ ...
* ‘plot3D’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘plot3D’ as ‘plot3D_1.4_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (plot3D)
* installing *binary* package ‘pcaPP’ ...
* ‘pcaPP’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘pcaPP’ as ‘pcaPP_2.0-3_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (pcaPP)
* installing *binary* package ‘foreach’ ...
* ‘foreach’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘foreach’ as ‘foreach_1.5.2_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (foreach)
* installing *binary* package ‘kSamples’ ...
* ‘kSamples’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘kSamples’ as ‘kSamples_1.2-9_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (kSamples)
* installing *binary* package ‘ks’ ...
* ‘ks’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘ks’ as ‘ks_1.14.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (ks)
* installing *binary* package ‘doParallel’ ...
* ‘doParallel’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘doParallel’ as ‘doParallel_1.0.17_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (doParallel)
* installing *binary* package ‘hdrcde’ ...
* ‘hdrcde’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘hdrcde’ as ‘hdrcde_3.4_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (hdrcde)
* installing *binary* package ‘rainbow’ ...
* ‘rainbow’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘rainbow’ as ‘rainbow_3.7_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (rainbow)
* installing *binary* package ‘fds’ ...
* ‘fds’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘fds’ as ‘fds_1.8_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (fds)
* installing *binary* package ‘fda’ ...
* ‘fda’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘fda’ as ‘fda_6.0.5_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (fda)
* installing *binary* package ‘fda.usc’ ...
* ‘fda.usc’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘fda.usc’ as ‘fda.usc_2.1.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (fda.usc)
* installing *binary* package ‘MBmca’ ...
* ‘MBmca’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘MBmca’ as ‘MBmca_1.0.1-3_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (MBmca)
* installing *binary* package ‘minpack.lm’ ...
* ‘minpack.lm’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘minpack.lm’ as ‘minpack.lm_1.2-3_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (minpack.lm)
* installing *binary* package ‘rgl’ ...
* ‘rgl’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘rgl’ as ‘rgl_1.1.3_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (rgl)
* installing *binary* package ‘changepoint’ ...
* ‘changepoint’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘changepoint’ as ‘changepoint_2.2.4_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (changepoint)
* installing *binary* package ‘ecp’ ...
* ‘ecp’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘ecp’ as ‘ecp_3.1.4_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (ecp)
* installing *binary* package ‘pbapply’ ...
* ‘pbapply’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘pbapply’ as ‘pbapply_1.7-0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (pbapply)
* installing *binary* package ‘segmented’ ...
* ‘segmented’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘segmented’ as ‘segmented_1.6-4_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (segmented)
* installing *binary* package ‘qpcR’ ...
* ‘qpcR’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘qpcR’ as ‘qpcR_1.4-1_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (qpcR)
* installing *binary* package ‘PCRedux’ ...
* ‘PCRedux’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘PCRedux’ as ‘PCRedux_1.1-2_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (PCRedux)
* installing *binary* package ‘Rfit’ ...
* ‘Rfit’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘Rfit’ as ‘Rfit_0.24.2_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (Rfit)
