+ Rscript -e 'Sys.setenv(BIOCONDUCTOR_USE_CONTAINER_REPOSITORY=FALSE); p <- .libPaths(); p <- c('\''/tmp/tmp/built'\'', p); .libPaths(p); if(BiocManager::install('\''tricycle'\'', INSTALL_opts = '\''--build'\'', update = TRUE, quiet = FALSE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
'getOption("repos")' replaces Bioconductor standard repositories, see
'help("repositories", package = "BiocManager")' for details.
Replacement repositories:
    CRAN: https://packagemanager.posit.co/cran/__linux__/jammy/latest
Bioconductor version 3.17 (BiocManager 1.30.20), R 4.3.0 (2023-04-21)
Installing package(s) 'tricycle'
also installing the dependencies ‘mvtnorm’, ‘circular’, ‘ggnewscale’, ‘scattermore’

trying URL 'https://packagemanager.posit.co/cran/__linux__/jammy/latest/src/contrib/mvtnorm_1.1-3.tar.gz'
Content type 'binary/octet-stream' length 225527 bytes (220 KB)
==================================================
downloaded 220 KB

trying URL 'https://packagemanager.posit.co/cran/__linux__/jammy/latest/src/contrib/circular_0.4-95.tar.gz'
Content type 'binary/octet-stream' length 819470 bytes (800 KB)
==================================================
downloaded 800 KB

trying URL 'https://packagemanager.posit.co/cran/__linux__/jammy/latest/src/contrib/ggnewscale_0.4.8.tar.gz'
Content type 'binary/octet-stream' length 342000 bytes (333 KB)
==================================================
downloaded 333 KB

trying URL 'https://packagemanager.posit.co/cran/__linux__/jammy/latest/src/contrib/scattermore_1.0.tar.gz'
Content type 'binary/octet-stream' length 68531 bytes (66 KB)
==================================================
downloaded 66 KB

trying URL 'https://bioconductor.org/packages/3.17/bioc/src/contrib/tricycle_1.8.0.tar.gz'
Content type 'application/x-gzip' length 4232963 bytes (4.0 MB)
==================================================
downloaded 4.0 MB

* installing *binary* package ‘mvtnorm’ ...
* ‘mvtnorm’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘mvtnorm’ as ‘mvtnorm_1.1-3_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (mvtnorm)
* installing *binary* package ‘ggnewscale’ ...
* ‘ggnewscale’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘ggnewscale’ as ‘ggnewscale_0.4.8_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (ggnewscale)
* installing *source* package ‘scattermore’ ...
** package ‘scattermore’ successfully unpacked and MD5 sums checked
** using staged installation
** libs
using C compiler: ‘gcc (Ubuntu 11.3.0-1ubuntu1~22.04) 11.3.0’
using C++ compiler: ‘g++ (Ubuntu 11.3.0-1ubuntu1~22.04) 11.3.0’
g++ -std=gnu++17 -I"/usr/local/lib/R/include" -DNDEBUG   -I/usr/local/include    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c histogram_to_rgbwt.cpp -o histogram_to_rgbwt.o
g++ -std=gnu++17 -I"/usr/local/lib/R/include" -DNDEBUG   -I/usr/local/include    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c kernel_histogram.cpp -o kernel_histogram.o
g++ -std=gnu++17 -I"/usr/local/lib/R/include" -DNDEBUG   -I/usr/local/include    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c kernel_rgbwt.cpp -o kernel_rgbwt.o
g++ -std=gnu++17 -I"/usr/local/lib/R/include" -DNDEBUG   -I/usr/local/include    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c scatter_histogram.cpp -o scatter_histogram.o
g++ -std=gnu++17 -I"/usr/local/lib/R/include" -DNDEBUG   -I/usr/local/include    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c scatter_indexed_rgbwt.cpp -o scatter_indexed_rgbwt.o
g++ -std=gnu++17 -I"/usr/local/lib/R/include" -DNDEBUG   -I/usr/local/include    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c scatter_lines_histogram.cpp -o scatter_lines_histogram.o
g++ -std=gnu++17 -I"/usr/local/lib/R/include" -DNDEBUG   -I/usr/local/include    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c scatter_lines_rgbwt.cpp -o scatter_lines_rgbwt.o
g++ -std=gnu++17 -I"/usr/local/lib/R/include" -DNDEBUG   -I/usr/local/include    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c scatter_multicolor_rgbwt.cpp -o scatter_multicolor_rgbwt.o
g++ -std=gnu++17 -I"/usr/local/lib/R/include" -DNDEBUG   -I/usr/local/include    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c scatter_singlecolor_rgbwt.cpp -o scatter_singlecolor_rgbwt.o
gcc -I"/usr/local/lib/R/include" -DNDEBUG   -I/usr/local/include    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c scattermore.c -o scattermore.o
g++ -std=gnu++17 -shared -L/usr/local/lib/R/lib -L/usr/local/lib -o scattermore.so histogram_to_rgbwt.o kernel_histogram.o kernel_rgbwt.o scatter_histogram.o scatter_indexed_rgbwt.o scatter_lines_histogram.o scatter_lines_rgbwt.o scatter_multicolor_rgbwt.o scatter_singlecolor_rgbwt.o scattermore.o -L/usr/local/lib/R/lib -lR
installing to /tmp/tmp/built/00LOCK-scattermore/00new/scattermore/libs
** R
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** checking absolute paths in shared objects and dynamic libraries
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘scattermore’ as ‘scattermore_1.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (scattermore)
* installing *binary* package ‘circular’ ...
* ‘circular’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘circular’ as ‘circular_0.4-95_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (circular)
* installing *source* package ‘tricycle’ ...
** using staged installation
** R
** data
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
*** copying figures
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘tricycle’ as ‘tricycle_1.8.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (tricycle)

The downloaded source packages are in
	‘/tmp/Rtmph1vxZ0/downloaded_packages’
Old packages: 'ScaledMatrix', 'viridis', 'cachem', 'later', 'profvis', 'sass',
  'waldo', 'class', 'KernSmooth', 'nnet'

real	0m37.188s
user	0m33.165s
sys	0m2.986s
