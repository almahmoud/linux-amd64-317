+ Rscript -e 'Sys.setenv(BIOCONDUCTOR_USE_CONTAINER_REPOSITORY=FALSE); p <- .libPaths(); p <- c('\''/tmp/tmp/built'\'', p); .libPaths(p); if(BiocManager::install('\''bambu'\'', INSTALL_opts = '\''--build'\'', update = TRUE, quiet = FALSE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
'getOption("repos")' replaces Bioconductor standard repositories, see
'help("repositories", package = "BiocManager")' for details.
Replacement repositories:
    CRAN: https://packagemanager.posit.co/cran/__linux__/jammy/latest
Bioconductor version 3.17 (BiocManager 1.30.20), R 4.3.0 (2023-04-21)
Installing package(s) 'bambu'
also installing the dependencies ‘data.table’, ‘xgboost’, ‘RcppArmadillo’

trying URL 'https://packagemanager.posit.co/cran/__linux__/jammy/latest/src/contrib/data.table_1.14.8.tar.gz'
Content type 'binary/octet-stream' length 2126876 bytes (2.0 MB)
==================================================
downloaded 2.0 MB

trying URL 'https://packagemanager.posit.co/cran/__linux__/jammy/latest/src/contrib/xgboost_1.7.5.1.tar.gz'
Content type 'binary/octet-stream' length 2106016 bytes (2.0 MB)
==================================================
downloaded 2.0 MB

trying URL 'https://packagemanager.posit.co/cran/__linux__/jammy/latest/src/contrib/RcppArmadillo_0.12.2.0.0.tar.gz'
Content type 'binary/octet-stream' length 1036257 bytes (1011 KB)
==================================================
downloaded 1011 KB

trying URL 'https://bioconductor.org/packages/3.17/bioc/src/contrib/bambu_3.2.2.tar.gz'
Content type 'application/x-gzip' length 2304063 bytes (2.2 MB)
==================================================
downloaded 2.2 MB

* installing *binary* package ‘data.table’ ...
* ‘data.table’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘data.table’ as ‘data.table_1.14.8_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (data.table)
* installing *binary* package ‘RcppArmadillo’ ...
* ‘RcppArmadillo’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘RcppArmadillo’ as ‘RcppArmadillo_0.12.2.0.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (RcppArmadillo)
* installing *binary* package ‘xgboost’ ...
* ‘xgboost’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘xgboost’ as ‘xgboost_1.7.5.1_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (xgboost)
* installing *source* package ‘bambu’ ...
** using staged installation
** libs
using C++ compiler: ‘g++ (Ubuntu 11.3.0-1ubuntu1~22.04) 11.3.0’
g++ -std=gnu++17 -I"/usr/local/lib/R/include" -DNDEBUG  -I'/usr/local/lib/R/site-library/Rcpp/include' -I'/tmp/tmp/built/RcppArmadillo/include' -I/usr/local/include   -fopenmp -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c RcppExports.cpp -o RcppExports.o
g++ -std=gnu++17 -I"/usr/local/lib/R/include" -DNDEBUG  -I'/usr/local/lib/R/site-library/Rcpp/include' -I'/tmp/tmp/built/RcppArmadillo/include' -I/usr/local/include   -fopenmp -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c em.cpp -o em.o
g++ -std=gnu++17 -shared -L/usr/local/lib/R/lib -L/usr/local/lib -o bambu.so RcppExports.o em.o -llapack -lblas -lgfortran -lm -lquadmath -fopenmp -L/usr/local/lib/R/lib -lR
installing to /tmp/tmp/built/00LOCK-bambu/00new/bambu/libs
** R
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** checking absolute paths in shared objects and dynamic libraries
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘bambu’ as ‘bambu_3.2.2_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (bambu)

The downloaded source packages are in
	‘/tmp/RtmpfhXSW7/downloaded_packages’
Old packages: 'cachem', 'later', 'profvis', 'sass', 'waldo', 'class',
  'KernSmooth', 'nnet'

real	1m0.914s
user	0m55.608s
sys	0m3.584s
* installing *binary* package ‘lazyeval’ ...
* ‘lazyeval’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘lazyeval’ as ‘lazyeval_0.2.2_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (lazyeval)
* installing *binary* package ‘crosstalk’ ...
* ‘crosstalk’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘crosstalk’ as ‘crosstalk_1.2.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (crosstalk)
* installing *binary* package ‘DT’ ...
* ‘DT’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘DT’ as ‘DT_0.27_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (DT)
* installing *source* package ‘interactiveDisplayBase’ ...
** using staged installation
** R
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘interactiveDisplayBase’ as ‘interactiveDisplayBase_1.38.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (interactiveDisplayBase)
* installing *source* package ‘AnnotationHub’ ...
** using staged installation
** R
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘AnnotationHub’ as ‘AnnotationHub_3.8.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (AnnotationHub)
* installing *source* package ‘ExperimentHub’ ...
** using staged installation
** R
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘ExperimentHub’ as ‘ExperimentHub_2.8.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (ExperimentHub)
* installing *source* package ‘NanoporeRNASeq’ ...
** using staged installation
** data
*** moving datasets to lazyload DB
** inst
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘NanoporeRNASeq’ as ‘NanoporeRNASeq_1.10.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (NanoporeRNASeq)
