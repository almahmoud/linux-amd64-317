+ Rscript -e 'Sys.setenv(BIOCONDUCTOR_USE_CONTAINER_REPOSITORY=FALSE); p <- .libPaths(); p <- c('\''/tmp/tmp/built'\'', p); .libPaths(p); if(BiocManager::install('\''illuminaio'\'', INSTALL_opts = '\''--build'\'', update = TRUE, quiet = FALSE, dependencies=TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
'getOption("repos")' replaces Bioconductor standard repositories, see
'help("repositories", package = "BiocManager")' for details.
Replacement repositories:
    CRAN: https://packagemanager.posit.co/cran/__linux__/jammy/latest
Bioconductor version 3.17 (BiocManager 1.30.20), R 4.3.0 (2023-04-21)
Installing package(s) 'illuminaio'
also installing the dependencies ‘bookdown’, ‘base64’, ‘RUnit’, ‘BiocGenerics’, ‘IlluminaDataTestFiles’, ‘BiocStyle’

trying URL 'https://packagemanager.posit.co/cran/__linux__/jammy/latest/src/contrib/bookdown_0.34.tar.gz'
Content type 'binary/octet-stream' length 1089792 bytes (1.0 MB)
==================================================
downloaded 1.0 MB

trying URL 'https://packagemanager.posit.co/cran/__linux__/jammy/latest/src/contrib/base64_2.0.1.tar.gz'
Content type 'binary/octet-stream' length 57987 bytes (56 KB)
==================================================
downloaded 56 KB

trying URL 'https://packagemanager.posit.co/cran/__linux__/jammy/latest/src/contrib/RUnit_0.4.32.tar.gz'
Content type 'binary/octet-stream' length 285088 bytes (278 KB)
==================================================
downloaded 278 KB

trying URL 'https://bioconductor.org/packages/3.17/bioc/src/contrib/BiocGenerics_0.46.0.tar.gz'
Content type 'application/x-gzip' length 48250 bytes (47 KB)
==================================================
downloaded 47 KB

trying URL 'https://bioconductor.org/packages/3.17/data/experiment/src/contrib/IlluminaDataTestFiles_1.38.0.tar.gz'
Content type 'application/x-gzip' length 24845413 bytes (23.7 MB)
==================================================
downloaded 23.7 MB

trying URL 'https://bioconductor.org/packages/3.17/bioc/src/contrib/BiocStyle_2.28.0.tar.gz'
Content type 'application/x-gzip' length 772922 bytes (754 KB)
==================================================
downloaded 754 KB

trying URL 'https://bioconductor.org/packages/3.17/bioc/src/contrib/illuminaio_0.42.0.tar.gz'
Content type 'application/x-gzip' length 322518 bytes (314 KB)
==================================================
downloaded 314 KB

* installing *binary* package ‘bookdown’ ...
* ‘bookdown’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘bookdown’ as ‘bookdown_0.34_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (bookdown)
* installing *binary* package ‘base64’ ...
* ‘base64’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘base64’ as ‘base64_2.0.1_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (base64)
* installing *binary* package ‘RUnit’ ...
* ‘RUnit’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘RUnit’ as ‘RUnit_0.4.32_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (RUnit)
* installing *source* package ‘BiocGenerics’ ...
** using staged installation
** R
** inst
** byte-compile and prepare package for lazy loading
Creating a new generic function for ‘aperm’ in package ‘BiocGenerics’
Creating a new generic function for ‘append’ in package ‘BiocGenerics’
Creating a new generic function for ‘as.data.frame’ in package ‘BiocGenerics’
Creating a new generic function for ‘cbind’ in package ‘BiocGenerics’
Creating a new generic function for ‘rbind’ in package ‘BiocGenerics’
Creating a new generic function for ‘do.call’ in package ‘BiocGenerics’
Creating a new generic function for ‘duplicated’ in package ‘BiocGenerics’
Creating a new generic function for ‘anyDuplicated’ in package ‘BiocGenerics’
Creating a new generic function for ‘eval’ in package ‘BiocGenerics’
Creating a new generic function for ‘pmax’ in package ‘BiocGenerics’
Creating a new generic function for ‘pmin’ in package ‘BiocGenerics’
Creating a new generic function for ‘pmax.int’ in package ‘BiocGenerics’
Creating a new generic function for ‘pmin.int’ in package ‘BiocGenerics’
Creating a new generic function for ‘Reduce’ in package ‘BiocGenerics’
Creating a new generic function for ‘Filter’ in package ‘BiocGenerics’
Creating a new generic function for ‘Find’ in package ‘BiocGenerics’
Creating a new generic function for ‘Map’ in package ‘BiocGenerics’
Creating a new generic function for ‘Position’ in package ‘BiocGenerics’
Creating a new generic function for ‘get’ in package ‘BiocGenerics’
Creating a new generic function for ‘mget’ in package ‘BiocGenerics’
Creating a new generic function for ‘grep’ in package ‘BiocGenerics’
Creating a new generic function for ‘grepl’ in package ‘BiocGenerics’
Creating a new generic function for ‘is.unsorted’ in package ‘BiocGenerics’
Creating a new generic function for ‘lapply’ in package ‘BiocGenerics’
Creating a new generic function for ‘sapply’ in package ‘BiocGenerics’
Creating a new generic function for ‘mapply’ in package ‘BiocGenerics’
Creating a new generic function for ‘match’ in package ‘BiocGenerics’
Creating a new generic function for ‘order’ in package ‘BiocGenerics’
Creating a new generic function for ‘paste’ in package ‘BiocGenerics’
Creating a new generic function for ‘rank’ in package ‘BiocGenerics’
Creating a new generic function for ‘rownames’ in package ‘BiocGenerics’
Creating a new generic function for ‘colnames’ in package ‘BiocGenerics’
Creating a new generic function for ‘union’ in package ‘BiocGenerics’
Creating a new generic function for ‘intersect’ in package ‘BiocGenerics’
Creating a new generic function for ‘setdiff’ in package ‘BiocGenerics’
Creating a new generic function for ‘sort’ in package ‘BiocGenerics’
Creating a new generic function for ‘table’ in package ‘BiocGenerics’
Creating a new generic function for ‘tapply’ in package ‘BiocGenerics’
Creating a new generic function for ‘unique’ in package ‘BiocGenerics’
Creating a new generic function for ‘unsplit’ in package ‘BiocGenerics’
Creating a new generic function for ‘var’ in package ‘BiocGenerics’
Creating a new generic function for ‘sd’ in package ‘BiocGenerics’
Creating a new generic function for ‘which.min’ in package ‘BiocGenerics’
Creating a new generic function for ‘which.max’ in package ‘BiocGenerics’
Creating a new generic function for ‘IQR’ in package ‘BiocGenerics’
Creating a new generic function for ‘mad’ in package ‘BiocGenerics’
Creating a new generic function for ‘xtabs’ in package ‘BiocGenerics’
Creating a new generic function for ‘basename’ in package ‘BiocGenerics’
Creating a new generic function for ‘dirname’ in package ‘BiocGenerics’
** help
*** installing help indices
** building package indices
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘BiocGenerics’ as ‘BiocGenerics_0.46.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (BiocGenerics)
* installing *source* package ‘IlluminaDataTestFiles’ ...
** using staged installation
** inst
** help
*** installing help indices
** building package indices
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘IlluminaDataTestFiles’ as ‘IlluminaDataTestFiles_1.38.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (IlluminaDataTestFiles)
* installing *source* package ‘BiocStyle’ ...
** using staged installation
** R
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘BiocStyle’ as ‘BiocStyle_2.28.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (BiocStyle)
* installing *source* package ‘illuminaio’ ...
** using staged installation
** libs
using C compiler: ‘gcc (Ubuntu 11.3.0-1ubuntu1~22.04) 11.3.0’
gcc -I"/usr/local/lib/R/include" -DNDEBUG   -I/usr/local/include    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c 000.init.c -o 000.init.o
gcc -I"/usr/local/lib/R/include" -DNDEBUG   -I/usr/local/include    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c des.c -o des.o
gcc -I"/usr/local/lib/R/include" -DNDEBUG   -I/usr/local/include    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c local_des.c -o local_des.o
gcc -shared -L/usr/local/lib/R/lib -L/usr/local/lib -o illuminaio.so 000.init.o des.o local_des.o -L/usr/local/lib/R/lib -lR
installing to /tmp/tmp/built/00LOCK-illuminaio/00new/illuminaio/libs
** R
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** checking absolute paths in shared objects and dynamic libraries
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘illuminaio’ as ‘illuminaio_0.42.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (illuminaio)

The downloaded source packages are in
	‘/tmp/RtmpRuSuVt/downloaded_packages’
Old packages: 'BiocManager', 'bslib', 'cachem', 'cpp11', 'curl', 'digest',
  'downlit', 'evaluate', 'httpuv', 'httr', 'httr2', 'jsonlite', 'knitr',
  'later', 'pkgbuild', 'processx', 'profvis', 'rmarkdown', 'sass', 'sys',
  'testthat', 'usethis', 'vctrs', 'waldo', 'class', 'KernSmooth', 'MASS',
  'Matrix', 'nnet'

real	0m19.533s
user	0m15.232s
sys	0m2.480s
* installing *source* package ‘IlluminaDataTestFiles’ ...
** using staged installation
** inst
** help
*** installing help indices
** building package indices
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘IlluminaDataTestFiles’ as ‘IlluminaDataTestFiles_1.38.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (IlluminaDataTestFiles)
