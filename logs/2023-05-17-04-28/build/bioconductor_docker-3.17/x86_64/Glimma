+ Rscript -e 'Sys.setenv(BIOCONDUCTOR_USE_CONTAINER_REPOSITORY=FALSE); p <- .libPaths(); p <- c('\''/tmp/tmp/built'\'', p); .libPaths(p); if(BiocManager::install('\''Glimma'\'', INSTALL_opts = '\''--build'\'', update = TRUE, quiet = FALSE, dependencies=TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
'getOption("repos")' replaces Bioconductor standard repositories, see
'help("repositories", package = "BiocManager")' for details.
Replacement repositories:
    CRAN: https://packagemanager.posit.co/cran/__linux__/jammy/latest
Bioconductor version 3.17 (BiocManager 1.30.20), R 4.3.0 (2023-04-21)
Installing package(s) 'Glimma'
also installing the dependencies ‘dir.expiry’, ‘basilisk.utils’, ‘RcppTOML’, ‘here’, ‘RcppHNSW’, ‘ScaledMatrix’, ‘rsvd’, ‘beeswarm’, ‘vipor’, ‘gridExtra’, ‘FNN’, ‘RcppAnnoy’, ‘RcppProgress’, ‘basilisk’, ‘assertthat’, ‘reticulate’, ‘Cairo’, ‘sitmo’, ‘lobstr’, ‘ExperimentHub’, ‘scuttle’, ‘BiocNeighbors’, ‘BiocSingular’, ‘ggbeeswarm’, ‘viridis’, ‘Rtsne’, ‘RcppML’, ‘uwot’, ‘ggrepel’, ‘densvis’, ‘ggrastr’, ‘igraph’, ‘bluster’, ‘metapod’, ‘dqrng’, ‘pryr’, ‘scRNAseq’, ‘scater’, ‘scran’

trying URL 'https://bioconductor.org/packages/3.17/bioc/src/contrib/dir.expiry_1.8.0.tar.gz'
Content type 'application/x-gzip' length 292895 bytes (286 KB)
==================================================
downloaded 286 KB

trying URL 'https://bioconductor.org/packages/3.17/bioc/src/contrib/basilisk.utils_1.12.1.tar.gz'
Content type 'application/x-gzip' length 240028 bytes (234 KB)
==================================================
downloaded 234 KB

trying URL 'https://packagemanager.posit.co/cran/__linux__/jammy/latest/src/contrib/RcppTOML_0.2.2.tar.gz'
Content type 'binary/octet-stream' length 237813 bytes (232 KB)
==================================================
downloaded 232 KB

trying URL 'https://packagemanager.posit.co/cran/__linux__/jammy/latest/src/contrib/here_1.0.1.tar.gz'
Content type 'binary/octet-stream' length 52848 bytes (51 KB)
==================================================
downloaded 51 KB

trying URL 'https://packagemanager.posit.co/cran/__linux__/jammy/latest/src/contrib/RcppHNSW_0.4.1.tar.gz'
Content type 'binary/octet-stream' length 179666 bytes (175 KB)
==================================================
downloaded 175 KB

trying URL 'https://bioconductor.org/packages/3.17/bioc/src/contrib/ScaledMatrix_1.8.1.tar.gz'
Content type 'application/x-gzip' length 298083 bytes (291 KB)
==================================================
downloaded 291 KB

trying URL 'https://packagemanager.posit.co/cran/__linux__/jammy/latest/src/contrib/rsvd_1.0.5.tar.gz'
Content type 'binary/octet-stream' length 3582950 bytes (3.4 MB)
==================================================
downloaded 3.4 MB

trying URL 'https://packagemanager.posit.co/cran/__linux__/jammy/latest/src/contrib/beeswarm_0.4.0.tar.gz'
Content type 'binary/octet-stream' length 77211 bytes (75 KB)
==================================================
downloaded 75 KB

trying URL 'https://packagemanager.posit.co/cran/__linux__/jammy/latest/src/contrib/vipor_0.4.5.tar.gz'
Content type 'binary/octet-stream' length 4404117 bytes (4.2 MB)
==================================================
downloaded 4.2 MB

trying URL 'https://packagemanager.posit.co/cran/__linux__/jammy/latest/src/contrib/gridExtra_2.3.tar.gz'
Content type 'binary/octet-stream' length 1106992 bytes (1.1 MB)
==================================================
downloaded 1.1 MB

trying URL 'https://packagemanager.posit.co/cran/__linux__/jammy/latest/src/contrib/FNN_1.1.3.2.tar.gz'
Content type 'binary/octet-stream' length 125950 bytes (122 KB)
==================================================
downloaded 122 KB

trying URL 'https://packagemanager.posit.co/cran/__linux__/jammy/latest/src/contrib/RcppAnnoy_0.0.20.tar.gz'
Content type 'binary/octet-stream' length 265355 bytes (259 KB)
==================================================
downloaded 259 KB

trying URL 'https://packagemanager.posit.co/cran/__linux__/jammy/latest/src/contrib/RcppProgress_0.4.2.tar.gz'
Content type 'binary/octet-stream' length 19755 bytes (19 KB)
==================================================
downloaded 19 KB

trying URL 'https://bioconductor.org/packages/3.17/bioc/src/contrib/basilisk_1.12.0.tar.gz'
Content type 'application/x-gzip' length 267174 bytes (260 KB)
==================================================
downloaded 260 KB

trying URL 'https://packagemanager.posit.co/cran/__linux__/jammy/latest/src/contrib/assertthat_0.2.1.tar.gz'
Content type 'binary/octet-stream' length 52457 bytes (51 KB)
==================================================
downloaded 51 KB

trying URL 'https://packagemanager.posit.co/cran/__linux__/jammy/latest/src/contrib/reticulate_1.28.tar.gz'
Content type 'binary/octet-stream' length 1727654 bytes (1.6 MB)
==================================================
downloaded 1.6 MB

trying URL 'https://packagemanager.posit.co/cran/__linux__/jammy/latest/src/contrib/Cairo_1.6-0.tar.gz'
Content type 'binary/octet-stream' length 99233 bytes (96 KB)
==================================================
downloaded 96 KB

trying URL 'https://packagemanager.posit.co/cran/__linux__/jammy/latest/src/contrib/sitmo_2.0.2.tar.gz'
Content type 'binary/octet-stream' length 169373 bytes (165 KB)
==================================================
downloaded 165 KB

trying URL 'https://packagemanager.posit.co/cran/__linux__/jammy/latest/src/contrib/lobstr_1.1.2.tar.gz'
Content type 'binary/octet-stream' length 144396 bytes (141 KB)
==================================================
downloaded 141 KB

trying URL 'https://bioconductor.org/packages/3.17/bioc/src/contrib/ExperimentHub_2.8.0.tar.gz'
Content type 'application/x-gzip' length 496139 bytes (484 KB)
==================================================
downloaded 484 KB

trying URL 'https://bioconductor.org/packages/3.17/bioc/src/contrib/scuttle_1.10.1.tar.gz'
Content type 'application/x-gzip' length 982376 bytes (959 KB)
==================================================
downloaded 959 KB

trying URL 'https://bioconductor.org/packages/3.17/bioc/src/contrib/BiocNeighbors_1.18.0.tar.gz'
Content type 'application/x-gzip' length 996090 bytes (972 KB)
==================================================
downloaded 972 KB

trying URL 'https://bioconductor.org/packages/3.17/bioc/src/contrib/BiocSingular_1.16.0.tar.gz'
Content type 'application/x-gzip' length 583845 bytes (570 KB)
==================================================
downloaded 570 KB

trying URL 'https://packagemanager.posit.co/cran/__linux__/jammy/latest/src/contrib/ggbeeswarm_0.7.2.tar.gz'
Content type 'binary/octet-stream' length 1754648 bytes (1.7 MB)
==================================================
downloaded 1.7 MB

trying URL 'https://packagemanager.posit.co/cran/__linux__/jammy/latest/src/contrib/viridis_0.6.3.tar.gz'
Content type 'binary/octet-stream' length 3013208 bytes (2.9 MB)
==================================================
downloaded 2.9 MB

trying URL 'https://packagemanager.posit.co/cran/__linux__/jammy/latest/src/contrib/Rtsne_0.16.tar.gz'
Content type 'binary/octet-stream' length 112091 bytes (109 KB)
==================================================
downloaded 109 KB

trying URL 'https://packagemanager.posit.co/cran/__linux__/jammy/latest/src/contrib/RcppML_0.3.7.tar.gz'
Content type 'binary/octet-stream' length 194858 bytes (190 KB)
==================================================
downloaded 190 KB

trying URL 'https://packagemanager.posit.co/cran/__linux__/jammy/latest/src/contrib/uwot_0.1.14.tar.gz'
Content type 'binary/octet-stream' length 675526 bytes (659 KB)
==================================================
downloaded 659 KB

trying URL 'https://packagemanager.posit.co/cran/__linux__/jammy/latest/src/contrib/ggrepel_0.9.3.tar.gz'
Content type 'binary/octet-stream' length 270444 bytes (264 KB)
==================================================
downloaded 264 KB

trying URL 'https://bioconductor.org/packages/3.17/bioc/src/contrib/densvis_1.10.1.tar.gz'
Content type 'application/x-gzip' length 1720069 bytes (1.6 MB)
==================================================
downloaded 1.6 MB

trying URL 'https://packagemanager.posit.co/cran/__linux__/jammy/latest/src/contrib/ggrastr_1.0.1.tar.gz'
Content type 'binary/octet-stream' length 2498183 bytes (2.4 MB)
==================================================
downloaded 2.4 MB

trying URL 'https://packagemanager.posit.co/cran/__linux__/jammy/latest/src/contrib/igraph_1.4.3.tar.gz'
Content type 'binary/octet-stream' length 4888620 bytes (4.7 MB)
==================================================
downloaded 4.7 MB

trying URL 'https://bioconductor.org/packages/3.17/bioc/src/contrib/bluster_1.10.0.tar.gz'
Content type 'application/x-gzip' length 2983039 bytes (2.8 MB)
==================================================
downloaded 2.8 MB

trying URL 'https://bioconductor.org/packages/3.17/bioc/src/contrib/metapod_1.8.0.tar.gz'
Content type 'application/x-gzip' length 316557 bytes (309 KB)
==================================================
downloaded 309 KB

trying URL 'https://packagemanager.posit.co/cran/__linux__/jammy/latest/src/contrib/dqrng_0.3.0.tar.gz'
Content type 'binary/octet-stream' length 153339 bytes (149 KB)
==================================================
downloaded 149 KB

trying URL 'https://packagemanager.posit.co/cran/__linux__/jammy/latest/src/contrib/pryr_0.1.6.tar.gz'
Content type 'binary/octet-stream' length 207405 bytes (202 KB)
==================================================
downloaded 202 KB

trying URL 'https://bioconductor.org/packages/3.17/data/experiment/src/contrib/scRNAseq_2.14.0.tar.gz'
Content type 'application/x-gzip' length 349394 bytes (341 KB)
==================================================
downloaded 341 KB

trying URL 'https://bioconductor.org/packages/3.17/bioc/src/contrib/scater_1.28.0.tar.gz'
Content type 'application/x-gzip' length 4089325 bytes (3.9 MB)
==================================================
downloaded 3.9 MB

trying URL 'https://bioconductor.org/packages/3.17/bioc/src/contrib/scran_1.28.1.tar.gz'
Content type 'application/x-gzip' length 1786563 bytes (1.7 MB)
==================================================
downloaded 1.7 MB

trying URL 'https://bioconductor.org/packages/3.17/bioc/src/contrib/Glimma_2.10.0.tar.gz'
Content type 'application/x-gzip' length 11686389 bytes (11.1 MB)
==================================================
downloaded 11.1 MB

* installing *source* package ‘dir.expiry’ ...
** using staged installation
** R
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘dir.expiry’ as ‘dir.expiry_1.8.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (dir.expiry)
* installing *binary* package ‘RcppTOML’ ...
* ‘RcppTOML’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘RcppTOML’ as ‘RcppTOML_0.2.2_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (RcppTOML)
* installing *binary* package ‘here’ ...
* ‘here’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘here’ as ‘here_1.0.1_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (here)
* installing *binary* package ‘RcppHNSW’ ...
* ‘RcppHNSW’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘RcppHNSW’ as ‘RcppHNSW_0.4.1_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (RcppHNSW)
* installing *source* package ‘ScaledMatrix’ ...
** using staged installation
** R
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘ScaledMatrix’ as ‘ScaledMatrix_1.8.1_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (ScaledMatrix)
* installing *binary* package ‘rsvd’ ...
* ‘rsvd’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘rsvd’ as ‘rsvd_1.0.5_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (rsvd)
* installing *binary* package ‘beeswarm’ ...
* ‘beeswarm’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘beeswarm’ as ‘beeswarm_0.4.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (beeswarm)
* installing *binary* package ‘vipor’ ...
* ‘vipor’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘vipor’ as ‘vipor_0.4.5_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (vipor)
* installing *binary* package ‘gridExtra’ ...
* ‘gridExtra’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘gridExtra’ as ‘gridExtra_2.3_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (gridExtra)
* installing *binary* package ‘FNN’ ...
* ‘FNN’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘FNN’ as ‘FNN_1.1.3.2_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (FNN)
* installing *binary* package ‘RcppAnnoy’ ...
* ‘RcppAnnoy’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘RcppAnnoy’ as ‘RcppAnnoy_0.0.20_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (RcppAnnoy)
* installing *binary* package ‘RcppProgress’ ...
* ‘RcppProgress’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘RcppProgress’ as ‘RcppProgress_0.4.2_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (RcppProgress)
* installing *binary* package ‘assertthat’ ...
* ‘assertthat’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘assertthat’ as ‘assertthat_0.2.1_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (assertthat)
* installing *source* package ‘Cairo’ ...
** package ‘Cairo’ successfully unpacked and MD5 sums checked
** using staged installation
checking for gcc... gcc
checking whether the C compiler works... yes
checking for C compiler default output file name... a.out
checking for suffix of executables... 
checking whether we are cross compiling... no
checking for suffix of object files... o
checking whether the compiler supports GNU C... yes
checking whether gcc accepts -g... yes
checking for gcc option to enable C11 features... none needed
checking for sys/wait.h that is POSIX.1 compatible... yes
checking for stdio.h... yes
checking for stdlib.h... yes
checking for string.h... yes
checking for inttypes.h... yes
checking for stdint.h... yes
checking for strings.h... yes
checking for sys/stat.h... yes
checking for sys/types.h... yes
checking for unistd.h... yes
checking for string.h... (cached) yes
checking for sys/time.h... yes
checking for unistd.h... (cached) yes
checking for an ANSI C-conforming const... yes
checking for pkg-config... /usr/bin/pkg-config
checking whether pkg-config knows about cairo... yes
checking for configurable backends... cairo cairo-ft cairo-pdf cairo-png cairo-ps cairo-xlib cairo-xlib-xrender
checking whether --static is needed... no
configure: CAIRO_CFLAGS=-I/usr/include/cairo -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -I/usr/include/pixman-1 -I/usr/include/uuid -I/usr/include/freetype2 -I/usr/include/libpng16
checking if R was compiled with the RConn patch... no
checking for cairo.h... yes
checking for PNG support in Cairo... yes
checking for ATS font support in Cairo... no
configure: CAIRO_LIBS=-lfreetype -lz -lpng16 -lz -lcairo -lXext -lXrender -lX11
checking for library containing deflate... none required
checking whether Cairo programs can be compiled... yes
checking for gcc options needed to detect all undeclared functions... none needed
checking whether cairo_image_surface_get_format is declared... no
checking whether FreeType support is desired... auto
checking for FreeType support in cairo... yes
checking whether FreeType needs additional flags... no
checking whether libjpeg works... yes
checking whether Harfbuzz layout is desired... auto
checking whether Harfbuzz + ICU works... yes
checking whether libtiff works... yes
configure: creating ./config.status
config.status: creating src/Makevars
config.status: creating src/cconfig.h
** libs
using C compiler: ‘gcc (Ubuntu 11.3.0-1ubuntu1~22.04) 11.3.0’
gcc -I"/usr/local/lib/R/include" -DNDEBUG -I/usr/include/cairo -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -I/usr/include/pixman-1 -I/usr/include/uuid -I/usr/include/freetype2 -I/usr/include/libpng16 -I/usr/include/harfbuzz -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -I/usr/include/freetype2 -I/usr/include/libpng16  -I. -Iinclude  -I/usr/local/include   -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c cairobem.c -o cairobem.o
gcc -I"/usr/local/lib/R/include" -DNDEBUG -I/usr/include/cairo -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -I/usr/include/pixman-1 -I/usr/include/uuid -I/usr/include/freetype2 -I/usr/include/libpng16 -I/usr/include/harfbuzz -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -I/usr/include/freetype2 -I/usr/include/libpng16  -I. -Iinclude  -I/usr/local/include   -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c cairogd.c -o cairogd.o
gcc -I"/usr/local/lib/R/include" -DNDEBUG -I/usr/include/cairo -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -I/usr/include/pixman-1 -I/usr/include/uuid -I/usr/include/freetype2 -I/usr/include/libpng16 -I/usr/include/harfbuzz -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -I/usr/include/freetype2 -I/usr/include/libpng16  -I. -Iinclude  -I/usr/local/include   -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c cairotalk.c -o cairotalk.o
gcc -I"/usr/local/lib/R/include" -DNDEBUG -I/usr/include/cairo -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -I/usr/include/pixman-1 -I/usr/include/uuid -I/usr/include/freetype2 -I/usr/include/libpng16 -I/usr/include/harfbuzz -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -I/usr/include/freetype2 -I/usr/include/libpng16  -I. -Iinclude  -I/usr/local/include   -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c img-backend.c -o img-backend.o
gcc -I"/usr/local/lib/R/include" -DNDEBUG -I/usr/include/cairo -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -I/usr/include/pixman-1 -I/usr/include/uuid -I/usr/include/freetype2 -I/usr/include/libpng16 -I/usr/include/harfbuzz -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -I/usr/include/freetype2 -I/usr/include/libpng16  -I. -Iinclude  -I/usr/local/include   -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c img-jpeg.c -o img-jpeg.o
gcc -I"/usr/local/lib/R/include" -DNDEBUG -I/usr/include/cairo -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -I/usr/include/pixman-1 -I/usr/include/uuid -I/usr/include/freetype2 -I/usr/include/libpng16 -I/usr/include/harfbuzz -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -I/usr/include/freetype2 -I/usr/include/libpng16  -I. -Iinclude  -I/usr/local/include   -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c img-tiff.c -o img-tiff.o
gcc -I"/usr/local/lib/R/include" -DNDEBUG -I/usr/include/cairo -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -I/usr/include/pixman-1 -I/usr/include/uuid -I/usr/include/freetype2 -I/usr/include/libpng16 -I/usr/include/harfbuzz -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -I/usr/include/freetype2 -I/usr/include/libpng16  -I. -Iinclude  -I/usr/local/include   -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c pdf-backend.c -o pdf-backend.o
gcc -I"/usr/local/lib/R/include" -DNDEBUG -I/usr/include/cairo -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -I/usr/include/pixman-1 -I/usr/include/uuid -I/usr/include/freetype2 -I/usr/include/libpng16 -I/usr/include/harfbuzz -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -I/usr/include/freetype2 -I/usr/include/libpng16  -I. -Iinclude  -I/usr/local/include   -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c ps-backend.c -o ps-backend.o
gcc -I"/usr/local/lib/R/include" -DNDEBUG -I/usr/include/cairo -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -I/usr/include/pixman-1 -I/usr/include/uuid -I/usr/include/freetype2 -I/usr/include/libpng16 -I/usr/include/harfbuzz -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -I/usr/include/freetype2 -I/usr/include/libpng16  -I. -Iinclude  -I/usr/local/include   -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c svg-backend.c -o svg-backend.o
gcc -I"/usr/local/lib/R/include" -DNDEBUG -I/usr/include/cairo -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -I/usr/include/pixman-1 -I/usr/include/uuid -I/usr/include/freetype2 -I/usr/include/libpng16 -I/usr/include/harfbuzz -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -I/usr/include/freetype2 -I/usr/include/libpng16  -I. -Iinclude  -I/usr/local/include   -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c w32-backend.c -o w32-backend.o
gcc -I"/usr/local/lib/R/include" -DNDEBUG -I/usr/include/cairo -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -I/usr/include/pixman-1 -I/usr/include/uuid -I/usr/include/freetype2 -I/usr/include/libpng16 -I/usr/include/harfbuzz -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -I/usr/include/freetype2 -I/usr/include/libpng16  -I. -Iinclude  -I/usr/local/include   -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c xlib-backend.c -o xlib-backend.o
gcc -shared -L/usr/local/lib/R/lib -L/usr/local/lib -o Cairo.so cairobem.o cairogd.o cairotalk.o img-backend.o img-jpeg.o img-tiff.o pdf-backend.o ps-backend.o svg-backend.o w32-backend.o xlib-backend.o -L/usr/local/lib -lfreetype -lz -lpng16 -lz -lcairo -lXext -lXrender -lX11 -ljpeg -lharfbuzz-icu -lharfbuzz -licuuc -licudata -lstdc++ -ltiff -L/usr/local/lib/R/lib -lR
installing to /tmp/tmp/built/00LOCK-Cairo/00new/Cairo/libs
** R
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** testing if installed package can be loaded from temporary location
** checking absolute paths in shared objects and dynamic libraries
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘Cairo’ as ‘Cairo_1.6-0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (Cairo)
* installing *binary* package ‘sitmo’ ...
* ‘sitmo’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘sitmo’ as ‘sitmo_2.0.2_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (sitmo)
* installing *binary* package ‘lobstr’ ...
* ‘lobstr’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘lobstr’ as ‘lobstr_1.1.2_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (lobstr)
* installing *source* package ‘ExperimentHub’ ...
** using staged installation
** R
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘ExperimentHub’ as ‘ExperimentHub_2.8.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (ExperimentHub)
* installing *source* package ‘scuttle’ ...
** using staged installation
** libs
using C++ compiler: ‘g++ (Ubuntu 11.3.0-1ubuntu1~22.04) 11.3.0’
using C++11
g++ -std=gnu++11 -I"/usr/local/lib/R/include" -DNDEBUG -I../inst/include/ -I'/usr/local/lib/R/site-library/Rcpp/include' -I'/tmp/tmp/built/beachmat/include' -I/usr/local/include    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c RcppExports.cpp -o RcppExports.o
g++ -std=gnu++11 -I"/usr/local/lib/R/include" -DNDEBUG -I../inst/include/ -I'/usr/local/lib/R/site-library/Rcpp/include' -I'/tmp/tmp/built/beachmat/include' -I/usr/local/include    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c cumulative_prop.cpp -o cumulative_prop.o
g++ -std=gnu++11 -I"/usr/local/lib/R/include" -DNDEBUG -I../inst/include/ -I'/usr/local/lib/R/site-library/Rcpp/include' -I'/tmp/tmp/built/beachmat/include' -I/usr/local/include    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c downsample_counts.cpp -o downsample_counts.o
g++ -std=gnu++11 -I"/usr/local/lib/R/include" -DNDEBUG -I../inst/include/ -I'/usr/local/lib/R/site-library/Rcpp/include' -I'/tmp/tmp/built/beachmat/include' -I/usr/local/include    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c fit_linear_model.cpp -o fit_linear_model.o
g++ -std=gnu++11 -I"/usr/local/lib/R/include" -DNDEBUG -I../inst/include/ -I'/usr/local/lib/R/site-library/Rcpp/include' -I'/tmp/tmp/built/beachmat/include' -I/usr/local/include    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c pool_size_factors.cpp -o pool_size_factors.o
g++ -std=gnu++11 -I"/usr/local/lib/R/include" -DNDEBUG -I../inst/include/ -I'/usr/local/lib/R/site-library/Rcpp/include' -I'/tmp/tmp/built/beachmat/include' -I/usr/local/include    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c sparse_summarize.cpp -o sparse_summarize.o
g++ -std=gnu++11 -I"/usr/local/lib/R/include" -DNDEBUG -I../inst/include/ -I'/usr/local/lib/R/site-library/Rcpp/include' -I'/tmp/tmp/built/beachmat/include' -I/usr/local/include    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c sum_counts.cpp -o sum_counts.o
g++ -std=gnu++11 -I"/usr/local/lib/R/include" -DNDEBUG -I../inst/include/ -I'/usr/local/lib/R/site-library/Rcpp/include' -I'/tmp/tmp/built/beachmat/include' -I/usr/local/include    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c utils.cpp -o utils.o
g++ -std=gnu++11 -shared -L/usr/local/lib/R/lib -L/usr/local/lib -o scuttle.so RcppExports.o cumulative_prop.o downsample_counts.o fit_linear_model.o pool_size_factors.o sparse_summarize.o sum_counts.o utils.o -llapack -lblas -lgfortran -lm -lquadmath -L/usr/local/lib/R/lib -lR
installing to /tmp/tmp/built/00LOCK-scuttle/00new/scuttle/libs
** R
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** checking absolute paths in shared objects and dynamic libraries
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘scuttle’ as ‘scuttle_1.10.1_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (scuttle)
* installing *binary* package ‘Rtsne’ ...
* ‘Rtsne’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘Rtsne’ as ‘Rtsne_0.16_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (Rtsne)
* installing *binary* package ‘RcppML’ ...
* ‘RcppML’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘RcppML’ as ‘RcppML_0.3.7_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (RcppML)
* installing *binary* package ‘ggrepel’ ...
* ‘ggrepel’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘ggrepel’ as ‘ggrepel_0.9.3_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (ggrepel)
* installing *binary* package ‘igraph’ ...
* ‘igraph’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘igraph’ as ‘igraph_1.4.3_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (igraph)
* installing *source* package ‘metapod’ ...
** using staged installation
** libs
using C++ compiler: ‘g++ (Ubuntu 11.3.0-1ubuntu1~22.04) 11.3.0’
using C++11
g++ -std=gnu++11 -I"/usr/local/lib/R/include" -DNDEBUG  -I'/usr/local/lib/R/site-library/Rcpp/include' -I/usr/local/include    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c RcppExports.cpp -o RcppExports.o
g++ -std=gnu++11 -I"/usr/local/lib/R/include" -DNDEBUG  -I'/usr/local/lib/R/site-library/Rcpp/include' -I/usr/local/include    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c combine_group.cpp -o combine_group.o
g++ -std=gnu++11 -I"/usr/local/lib/R/include" -DNDEBUG  -I'/usr/local/lib/R/site-library/Rcpp/include' -I/usr/local/include    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c combine_parallel.cpp -o combine_parallel.o
g++ -std=gnu++11 -I"/usr/local/lib/R/include" -DNDEBUG  -I'/usr/local/lib/R/site-library/Rcpp/include' -I/usr/local/include    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c count_direction.cpp -o count_direction.o
g++ -std=gnu++11 -I"/usr/local/lib/R/include" -DNDEBUG  -I'/usr/local/lib/R/site-library/Rcpp/include' -I/usr/local/include    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c summarize_direction.cpp -o summarize_direction.o
g++ -std=gnu++11 -shared -L/usr/local/lib/R/lib -L/usr/local/lib -o metapod.so RcppExports.o combine_group.o combine_parallel.o count_direction.o summarize_direction.o -L/usr/local/lib/R/lib -lR
installing to /tmp/tmp/built/00LOCK-metapod/00new/metapod/libs
** R
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** checking absolute paths in shared objects and dynamic libraries
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘metapod’ as ‘metapod_1.8.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (metapod)
* installing *source* package ‘Glimma’ ...
** using staged installation
** R
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘Glimma’ as ‘Glimma_2.10.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (Glimma)
* installing *source* package ‘basilisk.utils’ ...
** using staged installation
** R
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘basilisk.utils’ as ‘basilisk.utils_1.12.1_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (basilisk.utils)
* installing *binary* package ‘reticulate’ ...
* ‘reticulate’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘reticulate’ as ‘reticulate_1.28_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (reticulate)
* installing *source* package ‘BiocNeighbors’ ...
** using staged installation
** libs
using C++ compiler: ‘g++ (Ubuntu 11.3.0-1ubuntu1~22.04) 11.3.0’
using C++11
g++ -std=gnu++11 -I"/usr/local/lib/R/include" -DNDEBUG -I../inst/include/ -I'/usr/local/lib/R/site-library/Rcpp/include' -I'/tmp/tmp/built/RcppHNSW/include' -I/usr/local/include    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c RcppExports.cpp -o RcppExports.o
g++ -std=gnu++11 -I"/usr/local/lib/R/include" -DNDEBUG -I../inst/include/ -I'/usr/local/lib/R/site-library/Rcpp/include' -I'/tmp/tmp/built/RcppHNSW/include' -I/usr/local/include    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c annoy.cpp -o annoy.o
g++ -std=gnu++11 -I"/usr/local/lib/R/include" -DNDEBUG -I../inst/include/ -I'/usr/local/lib/R/site-library/Rcpp/include' -I'/tmp/tmp/built/RcppHNSW/include' -I/usr/local/include    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c build_annoy.cpp -o build_annoy.o
g++ -std=gnu++11 -I"/usr/local/lib/R/include" -DNDEBUG -I../inst/include/ -I'/usr/local/lib/R/site-library/Rcpp/include' -I'/tmp/tmp/built/RcppHNSW/include' -I/usr/local/include    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c build_hnsw.cpp -o build_hnsw.o
g++ -std=gnu++11 -I"/usr/local/lib/R/include" -DNDEBUG -I../inst/include/ -I'/usr/local/lib/R/site-library/Rcpp/include' -I'/tmp/tmp/built/RcppHNSW/include' -I/usr/local/include    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c build_vptree.cpp -o build_vptree.o
g++ -std=gnu++11 -I"/usr/local/lib/R/include" -DNDEBUG -I../inst/include/ -I'/usr/local/lib/R/site-library/Rcpp/include' -I'/tmp/tmp/built/RcppHNSW/include' -I/usr/local/include    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c distances.cpp -o distances.o
g++ -std=gnu++11 -I"/usr/local/lib/R/include" -DNDEBUG -I../inst/include/ -I'/usr/local/lib/R/site-library/Rcpp/include' -I'/tmp/tmp/built/RcppHNSW/include' -I/usr/local/include    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c exhaustive.cpp -o exhaustive.o
g++ -std=gnu++11 -I"/usr/local/lib/R/include" -DNDEBUG -I../inst/include/ -I'/usr/local/lib/R/site-library/Rcpp/include' -I'/tmp/tmp/built/RcppHNSW/include' -I/usr/local/include    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c find_annoy.cpp -o find_annoy.o
g++ -std=gnu++11 -I"/usr/local/lib/R/include" -DNDEBUG -I../inst/include/ -I'/usr/local/lib/R/site-library/Rcpp/include' -I'/tmp/tmp/built/RcppHNSW/include' -I/usr/local/include    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c find_exhaustive.cpp -o find_exhaustive.o
g++ -std=gnu++11 -I"/usr/local/lib/R/include" -DNDEBUG -I../inst/include/ -I'/usr/local/lib/R/site-library/Rcpp/include' -I'/tmp/tmp/built/RcppHNSW/include' -I/usr/local/include    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c find_hnsw.cpp -o find_hnsw.o
g++ -std=gnu++11 -I"/usr/local/lib/R/include" -DNDEBUG -I../inst/include/ -I'/usr/local/lib/R/site-library/Rcpp/include' -I'/tmp/tmp/built/RcppHNSW/include' -I/usr/local/include    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c find_kmknn.cpp -o find_kmknn.o
g++ -std=gnu++11 -I"/usr/local/lib/R/include" -DNDEBUG -I../inst/include/ -I'/usr/local/lib/R/site-library/Rcpp/include' -I'/tmp/tmp/built/RcppHNSW/include' -I/usr/local/include    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c find_mutual_nns.cpp -o find_mutual_nns.o
g++ -std=gnu++11 -I"/usr/local/lib/R/include" -DNDEBUG -I../inst/include/ -I'/usr/local/lib/R/site-library/Rcpp/include' -I'/tmp/tmp/built/RcppHNSW/include' -I/usr/local/include    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c find_vptree.cpp -o find_vptree.o
g++ -std=gnu++11 -I"/usr/local/lib/R/include" -DNDEBUG -I../inst/include/ -I'/usr/local/lib/R/site-library/Rcpp/include' -I'/tmp/tmp/built/RcppHNSW/include' -I/usr/local/include    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c hnsw.cpp -o hnsw.o
g++ -std=gnu++11 -I"/usr/local/lib/R/include" -DNDEBUG -I../inst/include/ -I'/usr/local/lib/R/site-library/Rcpp/include' -I'/tmp/tmp/built/RcppHNSW/include' -I/usr/local/include    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c kmknn.cpp -o kmknn.o
g++ -std=gnu++11 -I"/usr/local/lib/R/include" -DNDEBUG -I../inst/include/ -I'/usr/local/lib/R/site-library/Rcpp/include' -I'/tmp/tmp/built/RcppHNSW/include' -I/usr/local/include    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c query_annoy.cpp -o query_annoy.o
g++ -std=gnu++11 -I"/usr/local/lib/R/include" -DNDEBUG -I../inst/include/ -I'/usr/local/lib/R/site-library/Rcpp/include' -I'/tmp/tmp/built/RcppHNSW/include' -I/usr/local/include    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c query_exhaustive.cpp -o query_exhaustive.o
g++ -std=gnu++11 -I"/usr/local/lib/R/include" -DNDEBUG -I../inst/include/ -I'/usr/local/lib/R/site-library/Rcpp/include' -I'/tmp/tmp/built/RcppHNSW/include' -I/usr/local/include    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c query_hnsw.cpp -o query_hnsw.o
g++ -std=gnu++11 -I"/usr/local/lib/R/include" -DNDEBUG -I../inst/include/ -I'/usr/local/lib/R/site-library/Rcpp/include' -I'/tmp/tmp/built/RcppHNSW/include' -I/usr/local/include    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c query_kmknn.cpp -o query_kmknn.o
g++ -std=gnu++11 -I"/usr/local/lib/R/include" -DNDEBUG -I../inst/include/ -I'/usr/local/lib/R/site-library/Rcpp/include' -I'/tmp/tmp/built/RcppHNSW/include' -I/usr/local/include    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c query_vptree.cpp -o query_vptree.o
g++ -std=gnu++11 -I"/usr/local/lib/R/include" -DNDEBUG -I../inst/include/ -I'/usr/local/lib/R/site-library/Rcpp/include' -I'/tmp/tmp/built/RcppHNSW/include' -I/usr/local/include    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c utils.cpp -o utils.o
g++ -std=gnu++11 -I"/usr/local/lib/R/include" -DNDEBUG -I../inst/include/ -I'/usr/local/lib/R/site-library/Rcpp/include' -I'/tmp/tmp/built/RcppHNSW/include' -I/usr/local/include    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c vptree.cpp -o vptree.o
g++ -std=gnu++11 -shared -L/usr/local/lib/R/lib -L/usr/local/lib -o BiocNeighbors.so RcppExports.o annoy.o build_annoy.o build_hnsw.o build_vptree.o distances.o exhaustive.o find_annoy.o find_exhaustive.o find_hnsw.o find_kmknn.o find_mutual_nns.o find_vptree.o hnsw.o kmknn.o query_annoy.o query_exhaustive.o query_hnsw.o query_kmknn.o query_vptree.o utils.o vptree.o -L/usr/local/lib/R/lib -lR
installing to /tmp/tmp/built/00LOCK-BiocNeighbors/00new/BiocNeighbors/libs
** R
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** checking absolute paths in shared objects and dynamic libraries
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘BiocNeighbors’ as ‘BiocNeighbors_1.18.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (BiocNeighbors)
* installing *source* package ‘BiocSingular’ ...
** using staged installation
** libs
using C++ compiler: ‘g++ (Ubuntu 11.3.0-1ubuntu1~22.04) 11.3.0’
using C++11
g++ -std=gnu++11 -I"/usr/local/lib/R/include" -DNDEBUG  -I'/usr/local/lib/R/site-library/Rcpp/include' -I'/tmp/tmp/built/beachmat/include' -I/usr/local/include    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c RcppExports.cpp -o RcppExports.o
g++ -std=gnu++11 -I"/usr/local/lib/R/include" -DNDEBUG  -I'/usr/local/lib/R/site-library/Rcpp/include' -I'/tmp/tmp/built/beachmat/include' -I/usr/local/include    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c compute_scale.cpp -o compute_scale.o
g++ -std=gnu++11 -shared -L/usr/local/lib/R/lib -L/usr/local/lib -o BiocSingular.so RcppExports.o compute_scale.o -L/usr/local/lib/R/lib -lR
installing to /tmp/tmp/built/00LOCK-BiocSingular/00new/BiocSingular/libs
** R
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** checking absolute paths in shared objects and dynamic libraries
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘BiocSingular’ as ‘BiocSingular_1.16.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (BiocSingular)
* installing *binary* package ‘ggbeeswarm’ ...
* ‘ggbeeswarm’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘ggbeeswarm’ as ‘ggbeeswarm_0.7.2_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (ggbeeswarm)
* installing *binary* package ‘viridis’ ...
* ‘viridis’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘viridis’ as ‘viridis_0.6.3_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (viridis)
* installing *binary* package ‘dqrng’ ...
* ‘dqrng’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘dqrng’ as ‘dqrng_0.3.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (dqrng)
* installing *binary* package ‘pryr’ ...
* ‘pryr’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘pryr’ as ‘pryr_0.1.6_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (pryr)
* installing *source* package ‘scRNAseq’ ...
** using staged installation
** R
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘scRNAseq’ as ‘scRNAseq_2.14.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (scRNAseq)
* installing *source* package ‘basilisk’ ...
** using non-staged installation via StagedInstall field
** R
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded
* creating tarball
packaged installation of ‘basilisk’ as ‘basilisk_1.12.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (basilisk)
* installing *binary* package ‘uwot’ ...
* ‘uwot’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘uwot’ as ‘uwot_0.1.14_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (uwot)
* installing *source* package ‘ggrastr’ ...
** package ‘ggrastr’ successfully unpacked and MD5 sums checked
** using staged installation
** R
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘ggrastr’ as ‘ggrastr_1.0.1_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (ggrastr)
* installing *source* package ‘bluster’ ...
** using staged installation
** libs
using C++ compiler: ‘g++ (Ubuntu 11.3.0-1ubuntu1~22.04) 11.3.0’
using C++11
g++ -std=gnu++11 -I"/usr/local/lib/R/include" -DNDEBUG  -I'/usr/local/lib/R/site-library/Rcpp/include' -I/usr/local/include    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c RcppExports.cpp -o RcppExports.o
g++ -std=gnu++11 -I"/usr/local/lib/R/include" -DNDEBUG  -I'/usr/local/lib/R/site-library/Rcpp/include' -I/usr/local/include    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c build_snn.cpp -o build_snn.o
g++ -std=gnu++11 -I"/usr/local/lib/R/include" -DNDEBUG  -I'/usr/local/lib/R/site-library/Rcpp/include' -I/usr/local/include    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c sum_neighbor_weights.cpp -o sum_neighbor_weights.o
g++ -std=gnu++11 -shared -L/usr/local/lib/R/lib -L/usr/local/lib -o bluster.so RcppExports.o build_snn.o sum_neighbor_weights.o -L/usr/local/lib/R/lib -lR
installing to /tmp/tmp/built/00LOCK-bluster/00new/bluster/libs
** R
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** checking absolute paths in shared objects and dynamic libraries
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘bluster’ as ‘bluster_1.10.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (bluster)
* installing *source* package ‘densvis’ ...
** using non-staged installation via StagedInstall field
** libs
using C++ compiler: ‘g++ (Ubuntu 11.3.0-1ubuntu1~22.04) 11.3.0’
using C++14
g++ -std=gnu++14 -I"/usr/local/lib/R/include" -DNDEBUG  -I'/usr/local/lib/R/site-library/Rcpp/include' -I/usr/local/include   -fopenmp -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c RcppExports.cpp -o RcppExports.o
g++ -std=gnu++14 -I"/usr/local/lib/R/include" -DNDEBUG  -I'/usr/local/lib/R/site-library/Rcpp/include' -I/usr/local/include   -fopenmp -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c densne.cpp -o densne.o
g++ -std=gnu++14 -I"/usr/local/lib/R/include" -DNDEBUG  -I'/usr/local/lib/R/site-library/Rcpp/include' -I/usr/local/include   -fopenmp -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c densvis.cpp -o densvis.o
g++ -std=gnu++14 -I"/usr/local/lib/R/include" -DNDEBUG  -I'/usr/local/lib/R/site-library/Rcpp/include' -I/usr/local/include   -fopenmp -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c sptree.cpp -o sptree.o
g++ -std=gnu++14 -shared -L/usr/local/lib/R/lib -L/usr/local/lib -o densvis.so RcppExports.o densne.o densvis.o sptree.o -llapack -lblas -lgfortran -lm -lquadmath -fopenmp -L/usr/local/lib/R/lib -lR
installing to /tmp/tmp/built/densvis/libs
** R
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded
* creating tarball
packaged installation of ‘densvis’ as ‘densvis_1.10.1_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (densvis)
* installing *source* package ‘scran’ ...
** using staged installation
** libs
using C++ compiler: ‘g++ (Ubuntu 11.3.0-1ubuntu1~22.04) 11.3.0’
using C++11
g++ -std=gnu++11 -I"/usr/local/lib/R/include" -DNDEBUG  -I'/usr/local/lib/R/site-library/Rcpp/include' -I'/tmp/tmp/built/beachmat/include' -I'/usr/local/lib/R/site-library/BH/include' -I'/tmp/tmp/built/dqrng/include' -I'/tmp/tmp/built/scuttle/include' -I/usr/local/include    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c RcppExports.cpp -o RcppExports.o
g++ -std=gnu++11 -I"/usr/local/lib/R/include" -DNDEBUG  -I'/usr/local/lib/R/site-library/Rcpp/include' -I'/tmp/tmp/built/beachmat/include' -I'/usr/local/lib/R/site-library/BH/include' -I'/tmp/tmp/built/dqrng/include' -I'/tmp/tmp/built/scuttle/include' -I/usr/local/include    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c choose_effect_size.cpp -o choose_effect_size.o
g++ -std=gnu++11 -I"/usr/local/lib/R/include" -DNDEBUG  -I'/usr/local/lib/R/site-library/Rcpp/include' -I'/tmp/tmp/built/beachmat/include' -I'/usr/local/lib/R/site-library/BH/include' -I'/tmp/tmp/built/dqrng/include' -I'/tmp/tmp/built/scuttle/include' -I/usr/local/include    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c combine_rho.cpp -o combine_rho.o
g++ -std=gnu++11 -I"/usr/local/lib/R/include" -DNDEBUG  -I'/usr/local/lib/R/site-library/Rcpp/include' -I'/tmp/tmp/built/beachmat/include' -I'/usr/local/lib/R/site-library/BH/include' -I'/tmp/tmp/built/dqrng/include' -I'/tmp/tmp/built/scuttle/include' -I/usr/local/include    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c compute_blocked_stats.cpp -o compute_blocked_stats.o
g++ -std=gnu++11 -I"/usr/local/lib/R/include" -DNDEBUG  -I'/usr/local/lib/R/site-library/Rcpp/include' -I'/tmp/tmp/built/beachmat/include' -I'/usr/local/lib/R/site-library/BH/include' -I'/tmp/tmp/built/dqrng/include' -I'/tmp/tmp/built/scuttle/include' -I/usr/local/include    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c compute_residual_stats.cpp -o compute_residual_stats.o
g++ -std=gnu++11 -I"/usr/local/lib/R/include" -DNDEBUG  -I'/usr/local/lib/R/site-library/Rcpp/include' -I'/tmp/tmp/built/beachmat/include' -I'/usr/local/lib/R/site-library/BH/include' -I'/tmp/tmp/built/dqrng/include' -I'/tmp/tmp/built/scuttle/include' -I/usr/local/include    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c compute_rho_null.cpp -o compute_rho_null.o
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /usr/local/lib/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::CopyConstructible<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:167:5:   required from ‘struct boost::CopyConstructible<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:125:16:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /usr/local/lib/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::CopyConstructible<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /usr/local/lib/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>)>’
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_concepts.hpp:114:7:   [ skipping 10 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /usr/local/lib/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /usr/local/lib/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]’:
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_concepts.hpp:114:7:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /usr/local/lib/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::incrementable_traversal_tag]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /usr/local/lib/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:136:13:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /usr/local/lib/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /usr/local/lib/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::EqualityComparable<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:233:5:   required from ‘struct boost::EqualityComparable<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /usr/local/lib/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::EqualityComparable<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /usr/local/lib/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>)>’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:152:13:   [ skipping 9 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /usr/local/lib/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /usr/local/lib/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:152:13:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:278:9:   [ skipping 4 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /usr/local/lib/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::single_pass_traversal_tag]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /usr/local/lib/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:158:13:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:278:9:   [ skipping 4 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /usr/local/lib/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /usr/local/lib/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:278:9:   required from ‘struct boost::SinglePassRangeConcept<std::vector<int> >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:318:12:   required from ‘struct boost::ForwardRangeConcept<std::vector<int> >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:352:12:   required from ‘struct boost::BidirectionalRangeConcept<std::vector<int> >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:370:12:   required from ‘struct boost::RandomAccessRangeConcept<std::vector<int> >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /usr/local/lib/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::SinglePassIteratorConcept<Iterator>::~SinglePassIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<int*, std::vector<int> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:158:13: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  158 |             BOOST_CONCEPT_USAGE(SinglePassIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /usr/local/lib/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::CopyConstructible<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:167:5:   required from ‘struct boost::CopyConstructible<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:125:16:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /usr/local/lib/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::CopyConstructible<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /usr/local/lib/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:136:13:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /usr/local/lib/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /usr/local/lib/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::EqualityComparable<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:233:5:   required from ‘struct boost::EqualityComparable<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /usr/local/lib/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::EqualityComparable<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /usr/local/lib/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:158:13:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:281:9:   [ skipping 4 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /usr/local/lib/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /usr/local/lib/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:281:9:   required from ‘struct boost::SinglePassRangeConcept<std::vector<int> >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:318:12:   required from ‘struct boost::ForwardRangeConcept<std::vector<int> >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:352:12:   required from ‘struct boost::BidirectionalRangeConcept<std::vector<int> >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:370:12:   required from ‘struct boost::RandomAccessRangeConcept<std::vector<int> >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /usr/local/lib/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::SinglePassIteratorConcept<Iterator>::~SinglePassIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<const int*, std::vector<int> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:158:13: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  158 |             BOOST_CONCEPT_USAGE(SinglePassIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /usr/local/lib/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::SinglePassRangeConcept<std::vector<int> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:284:9:   required from ‘struct boost::SinglePassRangeConcept<std::vector<int> >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:318:12:   required from ‘struct boost::ForwardRangeConcept<std::vector<int> >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:352:12:   required from ‘struct boost::BidirectionalRangeConcept<std::vector<int> >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:370:12:   required from ‘struct boost::RandomAccessRangeConcept<std::vector<int> >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /usr/local/lib/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::SinglePassRangeConcept<std::vector<int> >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /usr/local/lib/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::DefaultConstructible<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:137:5:   required from ‘struct boost::DefaultConstructible<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:181:16:   required from ‘struct boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 4 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /usr/local/lib/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::DefaultConstructible<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /usr/local/lib/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::forward_traversal_tag> >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::forward_traversal_tag>’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::forward_traversal_tag>]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::forward_traversal_tag> >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::forward_traversal_tag> >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::forward_traversal_tag>)>’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:191:13:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /usr/local/lib/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::forward_traversal_tag>]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /usr/local/lib/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::forward_traversal_tag>]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:191:13:   required from ‘struct boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:321:9:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /usr/local/lib/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::forward_traversal_tag]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /usr/local/lib/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:197:13:   required from ‘struct boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:321:9:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /usr/local/lib/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /usr/local/lib/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:321:9:   required from ‘struct boost::ForwardRangeConcept<std::vector<int> >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:352:12:   required from ‘struct boost::BidirectionalRangeConcept<std::vector<int> >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:370:12:   required from ‘struct boost::RandomAccessRangeConcept<std::vector<int> >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /usr/local/lib/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::ForwardIteratorConcept<Iterator>::~ForwardIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<int*, std::vector<int> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:197:13: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  197 |             BOOST_CONCEPT_USAGE(ForwardIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /usr/local/lib/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::DefaultConstructible<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:137:5:   required from ‘struct boost::DefaultConstructible<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:181:16:   required from ‘struct boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 4 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /usr/local/lib/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::DefaultConstructible<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /usr/local/lib/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:197:13:   required from ‘struct boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:322:9:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /usr/local/lib/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /usr/local/lib/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:322:9:   required from ‘struct boost::ForwardRangeConcept<std::vector<int> >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:352:12:   required from ‘struct boost::BidirectionalRangeConcept<std::vector<int> >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:370:12:   required from ‘struct boost::RandomAccessRangeConcept<std::vector<int> >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /usr/local/lib/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::ForwardIteratorConcept<Iterator>::~ForwardIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<const int*, std::vector<int> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:197:13: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  197 |             BOOST_CONCEPT_USAGE(ForwardIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /usr/local/lib/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::bidirectional_traversal_tag> >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::bidirectional_traversal_tag>’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::bidirectional_traversal_tag>]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::bidirectional_traversal_tag> >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::bidirectional_traversal_tag> >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::bidirectional_traversal_tag>)>’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:218:14:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /usr/local/lib/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::bidirectional_traversal_tag>]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /usr/local/lib/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::bidirectional_traversal_tag>]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:218:14:   required from ‘struct boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:355:9:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /usr/local/lib/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::bidirectional_traversal_tag]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /usr/local/lib/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:224:14:   required from ‘struct boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:355:9:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /usr/local/lib/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /usr/local/lib/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:355:9:   required from ‘struct boost::BidirectionalRangeConcept<std::vector<int> >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:370:12:   required from ‘struct boost::RandomAccessRangeConcept<std::vector<int> >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /usr/local/lib/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::BidirectionalIteratorConcept<Iterator>::~BidirectionalIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<int*, std::vector<int> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:224:14: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  224 |              BOOST_CONCEPT_USAGE(BidirectionalIteratorConcept)
      |              ^~~~~~~~~~~~~~~~~~~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /usr/local/lib/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:224:14:   required from ‘struct boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:356:9:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /usr/local/lib/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /usr/local/lib/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:356:9:   required from ‘struct boost::BidirectionalRangeConcept<std::vector<int> >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:370:12:   required from ‘struct boost::RandomAccessRangeConcept<std::vector<int> >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /usr/local/lib/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::BidirectionalIteratorConcept<Iterator>::~BidirectionalIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<const int*, std::vector<int> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:224:14: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  224 |              BOOST_CONCEPT_USAGE(BidirectionalIteratorConcept)
      |              ^~~~~~~~~~~~~~~~~~~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /usr/local/lib/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::random_access_traversal_tag> >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::random_access_traversal_tag>’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::random_access_traversal_tag>]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::random_access_traversal_tag> >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::random_access_traversal_tag> >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::random_access_traversal_tag>)>’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:239:14:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /usr/local/lib/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::random_access_traversal_tag>]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /usr/local/lib/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::random_access_traversal_tag>]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:239:14:   required from ‘struct boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /usr/local/lib/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::random_access_traversal_tag]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /usr/local/lib/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:245:14:   required from ‘struct boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /usr/local/lib/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /usr/local/lib/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:373:9:   required from ‘struct boost::RandomAccessRangeConcept<std::vector<int> >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /usr/local/lib/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::RandomAccessIteratorConcept<Iterator>::~RandomAccessIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<int*, std::vector<int> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:245:14: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  245 |              BOOST_CONCEPT_USAGE(RandomAccessIteratorConcept)
      |              ^~~~~~~~~~~~~~~~~~~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /usr/local/lib/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:245:14:   required from ‘struct boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /usr/local/lib/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /usr/local/lib/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:374:9:   required from ‘struct boost::RandomAccessRangeConcept<std::vector<int> >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /usr/local/lib/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::RandomAccessIteratorConcept<Iterator>::~RandomAccessIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<const int*, std::vector<int> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:245:14: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  245 |              BOOST_CONCEPT_USAGE(RandomAccessIteratorConcept)
      |              ^~~~~~~~~~~~~~~~~~~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /usr/local/lib/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /usr/local/lib/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:370:12: note: in a call to non-static member function ‘boost::RandomAccessRangeConcept<std::vector<int> >::~RandomAccessRangeConcept()’
  370 |     struct RandomAccessRangeConcept : BidirectionalRangeConcept<T>
      |            ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size_type.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/size.hpp:21,
                 from /usr/local/lib/R/site-library/BH/include/boost/random/hyperexponential_distribution.hpp:29,
                 from /usr/local/lib/R/site-library/BH/include/boost/random.hpp:70,
                 from rand_custom.h:6,
                 from compute_rho_null.cpp:3:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::CopyConstructible<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::CopyConstructible<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:167:5:   required from ‘struct boost::CopyConstructible<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:125:16:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::CopyConstructible<TT>::~CopyConstructible() [with TT = __gnu_cxx::__normal_iterator<int*, std::vector<int> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:167:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  167 |     BOOST_CONCEPT_USAGE(CopyConstructible) {
      |     ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 11 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::incrementable_traversal_tag]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:136:13:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::IncrementableIteratorConcept<Iterator>::~IncrementableIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<int*, std::vector<int> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:136:13: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  136 |             BOOST_CONCEPT_USAGE(IncrementableIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::EqualityComparable<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::EqualityComparable<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:233:5:   required from ‘struct boost::EqualityComparable<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::EqualityComparable<TT>::~EqualityComparable() [with TT = __gnu_cxx::__normal_iterator<int*, std::vector<int> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:233:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  233 |     BOOST_CONCEPT_USAGE(EqualityComparable) {
      |     ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 10 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::single_pass_traversal_tag]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:158:13:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::SinglePassIteratorConcept<Iterator>::~SinglePassIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<int*, std::vector<int> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:158:13: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  158 |             BOOST_CONCEPT_USAGE(SinglePassIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::CopyConstructible<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::CopyConstructible<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:167:5:   required from ‘struct boost::CopyConstructible<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:125:16:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::CopyConstructible<TT>::~CopyConstructible() [with TT = __gnu_cxx::__normal_iterator<const int*, std::vector<int> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:167:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  167 |     BOOST_CONCEPT_USAGE(CopyConstructible) {
      |     ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:136:13:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::IncrementableIteratorConcept<Iterator>::~IncrementableIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<const int*, std::vector<int> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:136:13: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  136 |             BOOST_CONCEPT_USAGE(IncrementableIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::EqualityComparable<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::EqualityComparable<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:233:5:   required from ‘struct boost::EqualityComparable<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::EqualityComparable<TT>::~EqualityComparable() [with TT = __gnu_cxx::__normal_iterator<const int*, std::vector<int> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:233:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  233 |     BOOST_CONCEPT_USAGE(EqualityComparable) {
      |     ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:158:13:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::SinglePassIteratorConcept<Iterator>::~SinglePassIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<const int*, std::vector<int> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:158:13: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  158 |             BOOST_CONCEPT_USAGE(SinglePassIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::SinglePassRangeConcept<std::vector<int> >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::SinglePassRangeConcept<std::vector<int> > >]’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:284:9:   required from ‘struct boost::SinglePassRangeConcept<std::vector<int> >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:318:12:   required from ‘struct boost::ForwardRangeConcept<std::vector<int> >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:352:12:   required from ‘struct boost::BidirectionalRangeConcept<std::vector<int> >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:370:12:   required from ‘struct boost::RandomAccessRangeConcept<std::vector<int> >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::SinglePassRangeConcept<T>::~SinglePassRangeConcept() [with T = std::vector<int>]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:284:9: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  284 |         BOOST_CONCEPT_USAGE(SinglePassRangeConcept)
      |         ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::DefaultConstructible<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::DefaultConstructible<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:137:5:   required from ‘struct boost::DefaultConstructible<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:181:16:   required from ‘struct boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::DefaultConstructible<TT>::~DefaultConstructible() [with TT = __gnu_cxx::__normal_iterator<int*, std::vector<int> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:137:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  137 |     BOOST_CONCEPT_USAGE(DefaultConstructible) {
      |     ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::forward_traversal_tag>]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::forward_traversal_tag> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::forward_traversal_tag>’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::forward_traversal_tag>]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::forward_traversal_tag> >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::forward_traversal_tag> >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 9 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::forward_traversal_tag]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:197:13:   required from ‘struct boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 4 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::ForwardIteratorConcept<Iterator>::~ForwardIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<int*, std::vector<int> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:197:13: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  197 |             BOOST_CONCEPT_USAGE(ForwardIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::DefaultConstructible<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::DefaultConstructible<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:137:5:   required from ‘struct boost::DefaultConstructible<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:181:16:   required from ‘struct boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::DefaultConstructible<TT>::~DefaultConstructible() [with TT = __gnu_cxx::__normal_iterator<const int*, std::vector<int> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:137:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  137 |     BOOST_CONCEPT_USAGE(DefaultConstructible) {
      |     ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:197:13:   required from ‘struct boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 4 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::ForwardIteratorConcept<Iterator>::~ForwardIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<const int*, std::vector<int> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:197:13: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  197 |             BOOST_CONCEPT_USAGE(ForwardIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::bidirectional_traversal_tag>]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::bidirectional_traversal_tag> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::bidirectional_traversal_tag>’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::bidirectional_traversal_tag>]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::bidirectional_traversal_tag> >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::bidirectional_traversal_tag> >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::bidirectional_traversal_tag]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:224:14:   required from ‘struct boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::BidirectionalIteratorConcept<Iterator>::~BidirectionalIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<int*, std::vector<int> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:224:14: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  224 |              BOOST_CONCEPT_USAGE(BidirectionalIteratorConcept)
      |              ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:224:14:   required from ‘struct boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::BidirectionalIteratorConcept<Iterator>::~BidirectionalIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<const int*, std::vector<int> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:224:14: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  224 |              BOOST_CONCEPT_USAGE(BidirectionalIteratorConcept)
      |              ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::random_access_traversal_tag>]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::random_access_traversal_tag> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::random_access_traversal_tag>’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::random_access_traversal_tag>]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::random_access_traversal_tag> >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::random_access_traversal_tag> >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::random_access_traversal_tag]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:245:14:   required from ‘struct boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<int*, std::vector<int> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::RandomAccessIteratorConcept<Iterator>::~RandomAccessIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<int*, std::vector<int> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:245:14: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  245 |              BOOST_CONCEPT_USAGE(RandomAccessIteratorConcept)
      |              ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:245:14:   required from ‘struct boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<const int*, std::vector<int> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<int> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<int> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<int> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<int>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
compute_rho_null.cpp:33:37:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::RandomAccessIteratorConcept<Iterator>::~RandomAccessIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<const int*, std::vector<int> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:245:14: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  245 |              BOOST_CONCEPT_USAGE(RandomAccessIteratorConcept)
      |              ^~~~~~~~~~~~~~~~~~~
g++ -std=gnu++11 -I"/usr/local/lib/R/include" -DNDEBUG  -I'/usr/local/lib/R/site-library/Rcpp/include' -I'/tmp/tmp/built/beachmat/include' -I'/usr/local/lib/R/site-library/BH/include' -I'/tmp/tmp/built/dqrng/include' -I'/tmp/tmp/built/scuttle/include' -I/usr/local/include    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c cyclone_scores.cpp -o cyclone_scores.o
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::CopyConstructible<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:167:5:   required from ‘struct boost::CopyConstructible<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:125:16:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::CopyConstructible<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>)>’
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_concepts.hpp:114:7:   [ skipping 10 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]’:
/usr/local/lib/R/site-library/BH/include/boost/iterator/iterator_concepts.hpp:114:7:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::incrementable_traversal_tag]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:136:13:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::EqualityComparable<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:233:5:   required from ‘struct boost::EqualityComparable<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::EqualityComparable<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>)>’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:152:13:   [ skipping 9 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:152:13:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:278:9:   [ skipping 4 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::single_pass_traversal_tag]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:158:13:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:278:9:   [ skipping 4 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:278:9:   required from ‘struct boost::SinglePassRangeConcept<std::vector<double> >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:318:12:   required from ‘struct boost::ForwardRangeConcept<std::vector<double> >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:352:12:   required from ‘struct boost::BidirectionalRangeConcept<std::vector<double> >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:370:12:   required from ‘struct boost::RandomAccessRangeConcept<std::vector<double> >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::SinglePassIteratorConcept<Iterator>::~SinglePassIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<double*, std::vector<double> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:158:13: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  158 |             BOOST_CONCEPT_USAGE(SinglePassIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::CopyConstructible<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:167:5:   required from ‘struct boost::CopyConstructible<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:125:16:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::CopyConstructible<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:136:13:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::EqualityComparable<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:233:5:   required from ‘struct boost::EqualityComparable<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::EqualityComparable<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:158:13:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:281:9:   [ skipping 4 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:281:9:   required from ‘struct boost::SinglePassRangeConcept<std::vector<double> >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:318:12:   required from ‘struct boost::ForwardRangeConcept<std::vector<double> >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:352:12:   required from ‘struct boost::BidirectionalRangeConcept<std::vector<double> >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:370:12:   required from ‘struct boost::RandomAccessRangeConcept<std::vector<double> >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::SinglePassIteratorConcept<Iterator>::~SinglePassIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<const double*, std::vector<double> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:158:13: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  158 |             BOOST_CONCEPT_USAGE(SinglePassIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::SinglePassRangeConcept<std::vector<double> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:284:9:   required from ‘struct boost::SinglePassRangeConcept<std::vector<double> >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:318:12:   required from ‘struct boost::ForwardRangeConcept<std::vector<double> >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:352:12:   required from ‘struct boost::BidirectionalRangeConcept<std::vector<double> >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:370:12:   required from ‘struct boost::RandomAccessRangeConcept<std::vector<double> >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::SinglePassRangeConcept<std::vector<double> >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::DefaultConstructible<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:137:5:   required from ‘struct boost::DefaultConstructible<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:181:16:   required from ‘struct boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 4 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::DefaultConstructible<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::forward_traversal_tag> >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::forward_traversal_tag>’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::forward_traversal_tag>]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::forward_traversal_tag> >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::forward_traversal_tag> >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::forward_traversal_tag>)>’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:191:13:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::forward_traversal_tag>]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::forward_traversal_tag>]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:191:13:   required from ‘struct boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:321:9:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::forward_traversal_tag]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:197:13:   required from ‘struct boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:321:9:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:321:9:   required from ‘struct boost::ForwardRangeConcept<std::vector<double> >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:352:12:   required from ‘struct boost::BidirectionalRangeConcept<std::vector<double> >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:370:12:   required from ‘struct boost::RandomAccessRangeConcept<std::vector<double> >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::ForwardIteratorConcept<Iterator>::~ForwardIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<double*, std::vector<double> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:197:13: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  197 |             BOOST_CONCEPT_USAGE(ForwardIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::DefaultConstructible<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:137:5:   required from ‘struct boost::DefaultConstructible<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:181:16:   required from ‘struct boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 4 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::DefaultConstructible<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:197:13:   required from ‘struct boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:322:9:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:322:9:   required from ‘struct boost::ForwardRangeConcept<std::vector<double> >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:352:12:   required from ‘struct boost::BidirectionalRangeConcept<std::vector<double> >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:370:12:   required from ‘struct boost::RandomAccessRangeConcept<std::vector<double> >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::ForwardIteratorConcept<Iterator>::~ForwardIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<const double*, std::vector<double> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:197:13: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  197 |             BOOST_CONCEPT_USAGE(ForwardIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::bidirectional_traversal_tag> >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::bidirectional_traversal_tag>’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::bidirectional_traversal_tag>]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::bidirectional_traversal_tag> >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::bidirectional_traversal_tag> >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::bidirectional_traversal_tag>)>’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:218:14:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::bidirectional_traversal_tag>]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::bidirectional_traversal_tag>]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:218:14:   required from ‘struct boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:355:9:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::bidirectional_traversal_tag]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:224:14:   required from ‘struct boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:355:9:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:355:9:   required from ‘struct boost::BidirectionalRangeConcept<std::vector<double> >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:370:12:   required from ‘struct boost::RandomAccessRangeConcept<std::vector<double> >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::BidirectionalIteratorConcept<Iterator>::~BidirectionalIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<double*, std::vector<double> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:224:14: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  224 |              BOOST_CONCEPT_USAGE(BidirectionalIteratorConcept)
      |              ^~~~~~~~~~~~~~~~~~~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:224:14:   required from ‘struct boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:356:9:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:356:9:   required from ‘struct boost::BidirectionalRangeConcept<std::vector<double> >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:370:12:   required from ‘struct boost::RandomAccessRangeConcept<std::vector<double> >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::BidirectionalIteratorConcept<Iterator>::~BidirectionalIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<const double*, std::vector<double> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:224:14: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  224 |              BOOST_CONCEPT_USAGE(BidirectionalIteratorConcept)
      |              ^~~~~~~~~~~~~~~~~~~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::random_access_traversal_tag> >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::random_access_traversal_tag>’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::random_access_traversal_tag>]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::random_access_traversal_tag> >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::random_access_traversal_tag> >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::random_access_traversal_tag>)>’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:239:14:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::random_access_traversal_tag>]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::random_access_traversal_tag>]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:239:14:   required from ‘struct boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::random_access_traversal_tag]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:245:14:   required from ‘struct boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:373:9:   required from ‘struct boost::RandomAccessRangeConcept<std::vector<double> >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::RandomAccessIteratorConcept<Iterator>::~RandomAccessIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<double*, std::vector<double> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:245:14: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  245 |              BOOST_CONCEPT_USAGE(RandomAccessIteratorConcept)
      |              ^~~~~~~~~~~~~~~~~~~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:245:14:   required from ‘struct boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:5: note: in a call to non-static member function ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >]’
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |     ^
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:374:9:   required from ‘struct boost::RandomAccessRangeConcept<std::vector<double> >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::RandomAccessIteratorConcept<Iterator>::~RandomAccessIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<const double*, std::vector<double> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:245:14: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  245 |              BOOST_CONCEPT_USAGE(RandomAccessIteratorConcept)
      |              ^~~~~~~~~~~~~~~~~~~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept/assert.hpp:35,
                 from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:20,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp: In instantiation of ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’:
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47: warning: ‘this’ pointer is null [-Wnonnull]
   50 |     static void failed() { ((Model*)0)->~Model(); }
      |                            ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/local/lib/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:370:12: note: in a call to non-static member function ‘boost::RandomAccessRangeConcept<std::vector<double> >::~RandomAccessRangeConcept()’
  370 |     struct RandomAccessRangeConcept : BidirectionalRangeConcept<T>
      |            ^~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:31,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:19,
                 from /usr/local/lib/R/site-library/BH/include/boost/range/algorithm.hpp:29,
                 from cyclone_scores.cpp:4:
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::CopyConstructible<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::CopyConstructible<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:167:5:   required from ‘struct boost::CopyConstructible<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:125:16:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::CopyConstructible<TT>::~CopyConstructible() [with TT = __gnu_cxx::__normal_iterator<double*, std::vector<double> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:167:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  167 |     BOOST_CONCEPT_USAGE(CopyConstructible) {
      |     ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag>]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::incrementable_traversal_tag> >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 11 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::incrementable_traversal_tag]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:136:13:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::IncrementableIteratorConcept<Iterator>::~IncrementableIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<double*, std::vector<double> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:136:13: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  136 |             BOOST_CONCEPT_USAGE(IncrementableIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::EqualityComparable<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::EqualityComparable<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:233:5:   required from ‘struct boost::EqualityComparable<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::EqualityComparable<TT>::~EqualityComparable() [with TT = __gnu_cxx::__normal_iterator<double*, std::vector<double> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:233:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  233 |     BOOST_CONCEPT_USAGE(EqualityComparable) {
      |     ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag>]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::single_pass_traversal_tag> >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 10 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::single_pass_traversal_tag]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:158:13:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::SinglePassIteratorConcept<Iterator>::~SinglePassIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<double*, std::vector<double> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:158:13: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  158 |             BOOST_CONCEPT_USAGE(SinglePassIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::CopyConstructible<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::CopyConstructible<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:167:5:   required from ‘struct boost::CopyConstructible<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:125:16:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::CopyConstructible<TT>::~CopyConstructible() [with TT = __gnu_cxx::__normal_iterator<const double*, std::vector<double> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:167:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  167 |     BOOST_CONCEPT_USAGE(CopyConstructible) {
      |     ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:136:13:   required from ‘struct boost::range_detail::IncrementableIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::IncrementableIteratorConcept<Iterator>::~IncrementableIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<const double*, std::vector<double> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:136:13: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  136 |             BOOST_CONCEPT_USAGE(IncrementableIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::EqualityComparable<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::EqualityComparable<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:233:5:   required from ‘struct boost::EqualityComparable<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:147:16:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::EqualityComparable<TT>::~EqualityComparable() [with TT = __gnu_cxx::__normal_iterator<const double*, std::vector<double> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:233:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  233 |     BOOST_CONCEPT_USAGE(EqualityComparable) {
      |     ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:158:13:   required from ‘struct boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::SinglePassIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::SinglePassIteratorConcept<Iterator>::~SinglePassIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<const double*, std::vector<double> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:158:13: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  158 |             BOOST_CONCEPT_USAGE(SinglePassIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::SinglePassRangeConcept<std::vector<double> >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::SinglePassRangeConcept<std::vector<double> > >]’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:284:9:   required from ‘struct boost::SinglePassRangeConcept<std::vector<double> >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:318:12:   required from ‘struct boost::ForwardRangeConcept<std::vector<double> >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:352:12:   required from ‘struct boost::BidirectionalRangeConcept<std::vector<double> >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:370:12:   required from ‘struct boost::RandomAccessRangeConcept<std::vector<double> >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::SinglePassRangeConcept<T>::~SinglePassRangeConcept() [with T = std::vector<double>]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:284:9: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  284 |         BOOST_CONCEPT_USAGE(SinglePassRangeConcept)
      |         ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::DefaultConstructible<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::DefaultConstructible<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:137:5:   required from ‘struct boost::DefaultConstructible<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:181:16:   required from ‘struct boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::DefaultConstructible<TT>::~DefaultConstructible() [with TT = __gnu_cxx::__normal_iterator<double*, std::vector<double> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:137:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  137 |     BOOST_CONCEPT_USAGE(DefaultConstructible) {
      |     ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::forward_traversal_tag>]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::forward_traversal_tag> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::forward_traversal_tag>’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::forward_traversal_tag>]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::forward_traversal_tag> >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::forward_traversal_tag> >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 9 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::forward_traversal_tag]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:197:13:   required from ‘struct boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 4 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::ForwardIteratorConcept<Iterator>::~ForwardIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<double*, std::vector<double> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:197:13: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  197 |             BOOST_CONCEPT_USAGE(ForwardIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::DefaultConstructible<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::DefaultConstructible<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:137:5:   required from ‘struct boost::DefaultConstructible<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:181:16:   required from ‘struct boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   [ skipping 5 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::DefaultConstructible<TT>::~DefaultConstructible() [with TT = __gnu_cxx::__normal_iterator<const double*, std::vector<double> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:137:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  137 |     BOOST_CONCEPT_USAGE(DefaultConstructible) {
      |     ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:197:13:   required from ‘struct boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::ForwardIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 4 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::ForwardIteratorConcept<Iterator>::~ForwardIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<const double*, std::vector<double> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:197:13: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  197 |             BOOST_CONCEPT_USAGE(ForwardIteratorConcept)
      |             ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::bidirectional_traversal_tag>]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::bidirectional_traversal_tag> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::bidirectional_traversal_tag>’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::bidirectional_traversal_tag>]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::bidirectional_traversal_tag> >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::bidirectional_traversal_tag> >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::bidirectional_traversal_tag]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:224:14:   required from ‘struct boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::BidirectionalIteratorConcept<Iterator>::~BidirectionalIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<double*, std::vector<double> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:224:14: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  224 |              BOOST_CONCEPT_USAGE(BidirectionalIteratorConcept)
      |              ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:224:14:   required from ‘struct boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::BidirectionalIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::BidirectionalIteratorConcept<Iterator>::~BidirectionalIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<const double*, std::vector<double> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:224:14: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  224 |              BOOST_CONCEPT_USAGE(BidirectionalIteratorConcept)
      |              ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::random_access_traversal_tag>]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::random_access_traversal_tag> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5:   required from ‘struct boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::random_access_traversal_tag>’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::random_access_traversal_tag>]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::random_access_traversal_tag> >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::Convertible<boost::iterators::random_access_traversal_tag, boost::iterators::random_access_traversal_tag> >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::Convertible<X, Y>::~Convertible() [with X = boost::iterators::random_access_traversal_tag; Y = boost::iterators::random_access_traversal_tag]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/concept_check.hpp:208:5: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  208 |     BOOST_CONCEPT_USAGE(Convertible) {
      |     ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:245:14:   required from ‘struct boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<double*, std::vector<double> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::RandomAccessIteratorConcept<Iterator>::~RandomAccessIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<double*, std::vector<double> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:245:14: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  245 |              BOOST_CONCEPT_USAGE(RandomAccessIteratorConcept)
      |              ^~~~~~~~~~~~~~~~~~~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp: In instantiation of ‘boost::concepts::usage_requirements<Model>::~usage_requirements() [with Model = boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >]’:
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:50:47:   required from ‘static void boost::concepts::requirement<boost::concepts::failed************ Model::************>::failed() [with Model = boost::concepts::usage_requirements<boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > > >]’
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:245:14:   required from ‘struct boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::range_detail::RandomAccessIteratorConcept<__gnu_cxx::__normal_iterator<const double*, std::vector<double> > > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:32:62:   required by substitution of ‘template<class Model> boost::concepts::detail::yes boost::concepts::detail::has_constraints_(Model*, boost::concepts::detail::wrap_constraints<Model, (& Model::constraints)>*) [with Model = boost::RandomAccessRangeConcept<std::vector<double> >]’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:42:5:   required from ‘const bool boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >::value’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/has_constraints.hpp:45:51:   required from ‘struct boost::concepts::not_satisfied<boost::RandomAccessRangeConcept<std::vector<double> > >’
/usr/local/lib/R/site-library/BH/include/boost/concept/detail/general.hpp:72:8:   required from ‘struct boost::concepts::requirement_<void (*)(boost::RandomAccessRangeConcept<std::vector<double> >)>’
/usr/local/lib/R/site-library/BH/include/boost/range/algorithm/nth_element.hpp:33:5:   required from ‘RandomAccessRange& boost::range::random_shuffle(RandomAccessRange&, Generator&) [with RandomAccessRange = std::vector<double>; Generator = pcg_detail::engine<unsigned int, long unsigned int, pcg_detail::xsh_rr_mixin<unsigned int, long unsigned int>, true, pcg_detail::specific_stream<long unsigned int>, pcg_detail::default_multiplier<long unsigned int> >]’
cyclone_scores.cpp:115:41:   required from here
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:20:48: warning: ‘this’ pointer is null [-Wnonnull]
   20 |     ~usage_requirements() { ((Model*)0)->~Model(); }
      |                             ~~~~~~~~~~~~~~~~~~~^~
/usr/local/lib/R/site-library/BH/include/boost/concept/usage.hpp:37:7: note: in a call to non-static member function ‘boost::range_detail::RandomAccessIteratorConcept<Iterator>::~RandomAccessIteratorConcept() [with Iterator = __gnu_cxx::__normal_iterator<const double*, std::vector<double> >]’
   37 |       ~model()
      |       ^
/usr/local/lib/R/site-library/BH/include/boost/range/concepts.hpp:245:14: note: in expansion of macro ‘BOOST_CONCEPT_USAGE’
  245 |              BOOST_CONCEPT_USAGE(RandomAccessIteratorConcept)
      |              ^~~~~~~~~~~~~~~~~~~
g++ -std=gnu++11 -I"/usr/local/lib/R/include" -DNDEBUG  -I'/usr/local/lib/R/site-library/Rcpp/include' -I'/tmp/tmp/built/beachmat/include' -I'/usr/local/lib/R/site-library/BH/include' -I'/tmp/tmp/built/dqrng/include' -I'/tmp/tmp/built/scuttle/include' -I/usr/local/include    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c overlap_exprs.cpp -o overlap_exprs.o
g++ -std=gnu++11 -I"/usr/local/lib/R/include" -DNDEBUG  -I'/usr/local/lib/R/site-library/Rcpp/include' -I'/tmp/tmp/built/beachmat/include' -I'/usr/local/lib/R/site-library/BH/include' -I'/tmp/tmp/built/dqrng/include' -I'/tmp/tmp/built/scuttle/include' -I/usr/local/include    -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c rand_custom.cpp -o rand_custom.o
g++ -std=gnu++11 -shared -L/usr/local/lib/R/lib -L/usr/local/lib -o scran.so RcppExports.o choose_effect_size.o combine_rho.o compute_blocked_stats.o compute_residual_stats.o compute_rho_null.o cyclone_scores.o overlap_exprs.o rand_custom.o -llapack -lblas -lgfortran -lm -lquadmath -L/usr/local/lib/R/lib -lR
installing to /tmp/tmp/built/00LOCK-scran/00new/scran/libs
** R
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** checking absolute paths in shared objects and dynamic libraries
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘scran’ as ‘scran_1.28.1_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (scran)
* installing *source* package ‘scater’ ...
** using staged installation
** R
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘scater’ as ‘scater_1.28.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (scater)

The downloaded source packages are in
	‘/tmp/RtmpKVPumT/downloaded_packages’
Old packages: 'BiocParallel', 'Biostrings', 'DelayedArray', 'deldir', 'DT',
  'future.apply', 'cachem', 'evaluate', 'httpuv', 'httr', 'httr2', 'knitr',
  'later', 'profvis', 'sass', 'sys', 'testthat', 'waldo', 'class',
  'KernSmooth', 'MASS', 'Matrix', 'nnet'

real	9m14.379s
user	8m22.992s
sys	0m36.546s
