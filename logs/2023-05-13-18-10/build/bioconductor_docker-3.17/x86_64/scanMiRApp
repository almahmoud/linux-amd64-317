+ Rscript -e 'Sys.setenv(BIOCONDUCTOR_USE_CONTAINER_REPOSITORY=FALSE); p <- .libPaths(); p <- c('\''/tmp/tmp/built'\'', p); .libPaths(p); if(BiocManager::install('\''scanMiRApp'\'', INSTALL_opts = '\''--build'\'', update = TRUE, quiet = FALSE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
'getOption("repos")' replaces Bioconductor standard repositories, see
'help("repositories", package = "BiocManager")' for details.
Replacement repositories:
    CRAN: https://packagemanager.posit.co/cran/__linux__/jammy/latest
Bioconductor version 3.17 (BiocManager 1.30.20), R 4.3.0 (2023-04-21)
Installing package(s) 'scanMiRApp'
also installing the dependencies ‘fstcore’, ‘fst’, ‘plotly’, ‘rintrojs’, ‘scanMiRData’, ‘shinycssloaders’, ‘shinydashboard’, ‘shinyjqui’, ‘waiter’

trying URL 'https://packagemanager.posit.co/cran/__linux__/jammy/latest/src/contrib/fstcore_0.9.14.tar.gz'
Content type 'binary/octet-stream' length 401019 bytes (391 KB)
==================================================
downloaded 391 KB

trying URL 'https://packagemanager.posit.co/cran/__linux__/jammy/latest/src/contrib/fst_0.9.8.tar.gz'
Content type 'binary/octet-stream' length 118033 bytes (115 KB)
==================================================
downloaded 115 KB

trying URL 'https://packagemanager.posit.co/cran/__linux__/jammy/latest/src/contrib/plotly_4.10.1.tar.gz'
Content type 'binary/octet-stream' length 3180094 bytes (3.0 MB)
==================================================
downloaded 3.0 MB

trying URL 'https://packagemanager.posit.co/cran/__linux__/jammy/latest/src/contrib/rintrojs_0.3.2.tar.gz'
Content type 'binary/octet-stream' length 54266 bytes (52 KB)
==================================================
downloaded 52 KB

trying URL 'https://bioconductor.org/packages/3.17/data/experiment/src/contrib/scanMiRData_1.6.0.tar.gz'
Content type 'application/x-gzip' length 16921264 bytes (16.1 MB)
==================================================
downloaded 16.1 MB

trying URL 'https://packagemanager.posit.co/cran/__linux__/jammy/latest/src/contrib/shinycssloaders_1.0.0.tar.gz'
Content type 'binary/octet-stream' length 134206 bytes (131 KB)
==================================================
downloaded 131 KB

trying URL 'https://packagemanager.posit.co/cran/__linux__/jammy/latest/src/contrib/shinydashboard_0.7.2.tar.gz'
Content type 'binary/octet-stream' length 321929 bytes (314 KB)
==================================================
downloaded 314 KB

trying URL 'https://packagemanager.posit.co/cran/__linux__/jammy/latest/src/contrib/shinyjqui_0.4.1.tar.gz'
Content type 'binary/octet-stream' length 644756 bytes (629 KB)
==================================================
downloaded 629 KB

trying URL 'https://packagemanager.posit.co/cran/__linux__/jammy/latest/src/contrib/waiter_0.2.5.tar.gz'
Content type 'binary/octet-stream' length 462459 bytes (451 KB)
==================================================
downloaded 451 KB

trying URL 'https://bioconductor.org/packages/3.17/bioc/src/contrib/scanMiRApp_1.6.0.tar.gz'
Content type 'application/x-gzip' length 918918 bytes (897 KB)
==================================================
downloaded 897 KB

* installing *binary* package ‘fstcore’ ...
* ‘fstcore’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘fstcore’ as ‘fstcore_0.9.14_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (fstcore)
* installing *binary* package ‘plotly’ ...
* ‘plotly’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘plotly’ as ‘plotly_4.10.1_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (plotly)
* installing *binary* package ‘rintrojs’ ...
* ‘rintrojs’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘rintrojs’ as ‘rintrojs_0.3.2_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (rintrojs)
* installing *source* package ‘scanMiRData’ ...
** using staged installation
** R
** data
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘scanMiRData’ as ‘scanMiRData_1.6.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (scanMiRData)
* installing *binary* package ‘shinycssloaders’ ...
* ‘shinycssloaders’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘shinycssloaders’ as ‘shinycssloaders_1.0.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (shinycssloaders)
* installing *binary* package ‘shinydashboard’ ...
* ‘shinydashboard’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘shinydashboard’ as ‘shinydashboard_0.7.2_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (shinydashboard)
* installing *binary* package ‘shinyjqui’ ...
* ‘shinyjqui’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘shinyjqui’ as ‘shinyjqui_0.4.1_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (shinyjqui)
* installing *binary* package ‘waiter’ ...
* ‘waiter’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘waiter’ as ‘waiter_0.2.5_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (waiter)
* installing *binary* package ‘fst’ ...
* ‘fst’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘fst’ as ‘fst_0.9.8_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (fst)
* installing *source* package ‘scanMiRApp’ ...
** using staged installation
** R
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘scanMiRApp’ as ‘scanMiRApp_1.6.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (scanMiRApp)

The downloaded source packages are in
	‘/tmp/RtmpavJFL2/downloaded_packages’
Old packages: 'cachem', 'evaluate', 'httpuv', 'httr', 'httr2', 'later',
  'profvis', 'sass', 'testthat', 'waldo', 'class', 'KernSmooth', 'MASS', 'nnet'

real	1m3.516s
user	0m54.520s
sys	0m3.979s
