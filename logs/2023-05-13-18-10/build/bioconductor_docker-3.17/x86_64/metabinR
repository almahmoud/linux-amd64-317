+ Rscript -e 'Sys.setenv(BIOCONDUCTOR_USE_CONTAINER_REPOSITORY=FALSE); p <- .libPaths(); p <- c('\''/tmp/tmp/built'\'', p); .libPaths(p); if(BiocManager::install('\''metabinR'\'', INSTALL_opts = '\''--build'\'', update = TRUE, quiet = FALSE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
'getOption("repos")' replaces Bioconductor standard repositories, see
'help("repositories", package = "BiocManager")' for details.
Replacement repositories:
    CRAN: https://packagemanager.posit.co/cran/__linux__/jammy/latest
Bioconductor version 3.17 (BiocManager 1.30.20), R 4.3.0 (2023-04-21)
Installing package(s) 'metabinR'
also installing the dependency ‘rJava’

trying URL 'https://packagemanager.posit.co/cran/__linux__/jammy/latest/src/contrib/rJava_1.0-6.tar.gz'
Content type 'binary/octet-stream' length 1313797 bytes (1.3 MB)
==================================================
downloaded 1.3 MB

trying URL 'https://bioconductor.org/packages/3.17/bioc/src/contrib/metabinR_1.2.0.tar.gz'
Content type 'application/x-gzip' length 4577983 bytes (4.4 MB)
==================================================
downloaded 4.4 MB

* installing *binary* package ‘rJava’ ...
* ‘rJava’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘rJava’ as ‘rJava_1.0-6_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (rJava)
* installing *source* package ‘metabinR’ ...
** using staged installation
** R
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘metabinR’ as ‘metabinR_1.2.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (metabinR)

The downloaded source packages are in
	‘/tmp/Rtmp2xRhgq/downloaded_packages’
Old packages: 'cachem', 'evaluate', 'httpuv', 'httr', 'httr2', 'later',
  'profvis', 'sass', 'testthat', 'waldo', 'class', 'KernSmooth', 'MASS', 'nnet'

real	0m10.484s
user	0m6.658s
sys	0m1.044s
* installing *binary* package ‘generics’ ...
* ‘generics’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘generics’ as ‘generics_0.1.3_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (generics)
* installing *binary* package ‘tidyselect’ ...
* ‘tidyselect’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘tidyselect’ as ‘tidyselect_1.2.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (tidyselect)
* installing *binary* package ‘sp’ ...
* ‘sp’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘sp’ as ‘sp_1.6-0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (sp)
* installing *binary* package ‘terra’ ...
* ‘terra’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘terra’ as ‘terra_1.7-29_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (terra)
* installing *binary* package ‘entropy’ ...
* ‘entropy’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘entropy’ as ‘entropy_1.3.1_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (entropy)
* installing *binary* package ‘dplyr’ ...
* ‘dplyr’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘dplyr’ as ‘dplyr_1.1.2_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (dplyr)
* installing *binary* package ‘raster’ ...
* ‘raster’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘raster’ as ‘raster_3.6-20_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (raster)
* installing *binary* package ‘tidyr’ ...
* ‘tidyr’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘tidyr’ as ‘tidyr_1.3.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (tidyr)
* installing *binary* package ‘sabre’ ...
* ‘sabre’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘sabre’ as ‘sabre_0.4.3_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (sabre)
