+ Rscript -e 'Sys.setenv(BIOCONDUCTOR_USE_CONTAINER_REPOSITORY=FALSE); p <- .libPaths(); p <- c('\''/tmp/tmp/built'\'', p); .libPaths(p); if(BiocManager::install('\''DMCFB'\'', INSTALL_opts = '\''--build'\'', update = TRUE, quiet = FALSE, dependencies=TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
'getOption("repos")' replaces Bioconductor standard repositories, see
'help("repositories", package = "BiocManager")' for details.
Replacement repositories:
    CRAN: https://packagemanager.posit.co/cran/__linux__/jammy/latest
Bioconductor version 3.17 (BiocManager 1.30.20), R 4.3.0 (2023-04-21)
Installing package(s) 'DMCFB'
also installing the dependencies ‘minqa’, ‘nloptr’, ‘biglm’, ‘lme4’, ‘coda’, ‘benchmarkmeData’, ‘speedglm’, ‘arm’, ‘benchmarkme’, ‘fastDummies’

trying URL 'https://packagemanager.posit.co/cran/__linux__/jammy/latest/src/contrib/minqa_1.2.5.tar.gz'
Content type 'binary/octet-stream' length 117604 bytes (114 KB)
==================================================
downloaded 114 KB

trying URL 'https://packagemanager.posit.co/cran/__linux__/jammy/latest/src/contrib/nloptr_2.0.3.tar.gz'
Content type 'binary/octet-stream' length 710251 bytes (693 KB)
==================================================
downloaded 693 KB

trying URL 'https://packagemanager.posit.co/cran/__linux__/jammy/latest/src/contrib/biglm_0.9-2.1.tar.gz'
Content type 'binary/octet-stream' length 65839 bytes (64 KB)
==================================================
downloaded 64 KB

trying URL 'https://packagemanager.posit.co/cran/__linux__/jammy/latest/src/contrib/lme4_1.1-34.tar.gz'
Content type 'binary/octet-stream' length 4234407 bytes (4.0 MB)
==================================================
downloaded 4.0 MB

trying URL 'https://packagemanager.posit.co/cran/__linux__/jammy/latest/src/contrib/coda_0.19-4.tar.gz'
Content type 'binary/octet-stream' length 320307 bytes (312 KB)
==================================================
downloaded 312 KB

trying URL 'https://packagemanager.posit.co/cran/__linux__/jammy/latest/src/contrib/benchmarkmeData_1.0.4.tar.gz'
Content type 'binary/octet-stream' length 284562 bytes (277 KB)
==================================================
downloaded 277 KB

trying URL 'https://packagemanager.posit.co/cran/__linux__/jammy/latest/src/contrib/speedglm_0.3-5.tar.gz'
Content type 'binary/octet-stream' length 189097 bytes (184 KB)
==================================================
downloaded 184 KB

trying URL 'https://packagemanager.posit.co/cran/__linux__/jammy/latest/src/contrib/arm_1.13-1.tar.gz'
Content type 'binary/octet-stream' length 423636 bytes (413 KB)
==================================================
downloaded 413 KB

trying URL 'https://packagemanager.posit.co/cran/__linux__/jammy/latest/src/contrib/benchmarkme_1.0.8.tar.gz'
Content type 'binary/octet-stream' length 121002 bytes (118 KB)
==================================================
downloaded 118 KB

trying URL 'https://packagemanager.posit.co/cran/__linux__/jammy/latest/src/contrib/fastDummies_1.7.3.tar.gz'
Content type 'binary/octet-stream' length 40775 bytes (39 KB)
==================================================
downloaded 39 KB

trying URL 'https://bioconductor.org/packages/3.17/bioc/src/contrib/DMCFB_1.14.0.tar.gz'
Content type 'application/x-gzip' length 1090586 bytes (1.0 MB)
==================================================
downloaded 1.0 MB

* installing *binary* package ‘minqa’ ...
* ‘minqa’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘minqa’ as ‘minqa_1.2.5_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (minqa)
* installing *binary* package ‘nloptr’ ...
* ‘nloptr’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘nloptr’ as ‘nloptr_2.0.3_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (nloptr)
* installing *binary* package ‘biglm’ ...
* ‘biglm’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘biglm’ as ‘biglm_0.9-2.1_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (biglm)
* installing *binary* package ‘coda’ ...
* ‘coda’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘coda’ as ‘coda_0.19-4_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (coda)
* installing *binary* package ‘benchmarkmeData’ ...
* ‘benchmarkmeData’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘benchmarkmeData’ as ‘benchmarkmeData_1.0.4_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (benchmarkmeData)
* installing *binary* package ‘fastDummies’ ...
* ‘fastDummies’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘fastDummies’ as ‘fastDummies_1.7.3_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (fastDummies)
* installing *binary* package ‘lme4’ ...
* ‘lme4’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘lme4’ as ‘lme4_1.1-34_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (lme4)
* installing *binary* package ‘speedglm’ ...
* ‘speedglm’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘speedglm’ as ‘speedglm_0.3-5_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (speedglm)
* installing *binary* package ‘benchmarkme’ ...
* ‘benchmarkme’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘benchmarkme’ as ‘benchmarkme_1.0.8_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (benchmarkme)
* installing *binary* package ‘arm’ ...
* ‘arm’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘arm’ as ‘arm_1.13-1_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (arm)
* installing *source* package ‘DMCFB’ ...
** using staged installation
** R
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘DMCFB’ as ‘DMCFB_1.14.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (DMCFB)

The downloaded source packages are in
	‘/tmp/RtmpS3QGri/downloaded_packages’
Old packages: 'BiocManager', 'bslib', 'cachem', 'cpp11', 'curl', 'digest',
  'downlit', 'evaluate', 'fontawesome', 'fs', 'gert', 'htmltools', 'httpuv',
  'httr', 'httr2', 'jsonlite', 'knitr', 'later', 'openssl', 'pkgbuild',
  'pkgload', 'processx', 'profvis', 'promises', 'purrr', 'Rcpp', 'remotes',
  'rmarkdown', 'rstudioapi', 'sass', 'shiny', 'sys', 'testthat', 'tinytex',
  'usethis', 'vctrs', 'waldo', 'xfun', 'xml2', 'class', 'KernSmooth', 'MASS',
  'Matrix', 'mgcv', 'nlme', 'nnet', 'spatial', 'survival'

real	1m7.391s
user	0m46.214s
sys	0m4.084s
