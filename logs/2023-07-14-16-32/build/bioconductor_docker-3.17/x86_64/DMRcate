+ Rscript -e 'Sys.setenv(BIOCONDUCTOR_USE_CONTAINER_REPOSITORY=FALSE); p <- .libPaths(); p <- c('\''/tmp/tmp/built'\'', p); .libPaths(p); if(BiocManager::install('\''DMRcate'\'', INSTALL_opts = '\''--build'\'', update = TRUE, quiet = FALSE, dependencies=TRUE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
'getOption("repos")' replaces Bioconductor standard repositories, see
'help("repositories", package = "BiocManager")' for details.
Replacement repositories:
    CRAN: https://packagemanager.posit.co/cran/__linux__/jammy/latest
Bioconductor version 3.17 (BiocManager 1.30.20), R 4.3.0 (2023-04-21)
Installing package(s) 'DMRcate'
also installing the dependencies ‘rematch’, ‘cellranger’, ‘BiasedUrn’, ‘ruv’, ‘readxl’, ‘missMethyl’, ‘IlluminaHumanMethylationEPICanno.ilm10b4.hg19’, ‘FlowSorted.Blood.EPIC’, ‘tissueTreg’, ‘DMRcatedata’

trying URL 'https://packagemanager.posit.co/cran/__linux__/jammy/latest/src/contrib/rematch_1.0.1.tar.gz'
Content type 'binary/octet-stream' length 12215 bytes (11 KB)
==================================================
downloaded 11 KB

trying URL 'https://packagemanager.posit.co/cran/__linux__/jammy/latest/src/contrib/cellranger_1.1.0.tar.gz'
Content type 'binary/octet-stream' length 100989 bytes (98 KB)
==================================================
downloaded 98 KB

trying URL 'https://packagemanager.posit.co/cran/__linux__/jammy/latest/src/contrib/BiasedUrn_2.0.10.tar.gz'
Content type 'binary/octet-stream' length 285086 bytes (278 KB)
==================================================
downloaded 278 KB

trying URL 'https://packagemanager.posit.co/cran/__linux__/jammy/latest/src/contrib/ruv_0.9.7.1.tar.gz'
Content type 'binary/octet-stream' length 279544 bytes (272 KB)
==================================================
downloaded 272 KB

trying URL 'https://packagemanager.posit.co/cran/__linux__/jammy/latest/src/contrib/readxl_1.4.3.tar.gz'
Content type 'binary/octet-stream' length 879631 bytes (859 KB)
==================================================
downloaded 859 KB

trying URL 'https://bioconductor.org/packages/3.17/bioc/src/contrib/missMethyl_1.34.0.tar.gz'
Content type 'application/x-gzip' length 1338867 bytes (1.3 MB)
==================================================
downloaded 1.3 MB

trying URL 'https://bioconductor.org/packages/3.17/data/annotation/src/contrib/IlluminaHumanMethylationEPICanno.ilm10b4.hg19_0.6.0.tar.gz'
Content type 'application/x-gzip' length 158431882 bytes (151.1 MB)
==================================================
downloaded 151.1 MB

trying URL 'https://bioconductor.org/packages/3.17/data/experiment/src/contrib/FlowSorted.Blood.EPIC_2.4.2.tar.gz'
Content type 'application/x-gzip' length 99186 bytes (96 KB)
==================================================
downloaded 96 KB

trying URL 'https://bioconductor.org/packages/3.17/data/experiment/src/contrib/tissueTreg_1.20.0.tar.gz'
Content type 'application/x-gzip' length 583325 bytes (569 KB)
==================================================
downloaded 569 KB

trying URL 'https://bioconductor.org/packages/3.17/data/experiment/src/contrib/DMRcatedata_2.18.0.tar.gz'
Content type 'application/x-gzip' length 105050 bytes (102 KB)
==================================================
downloaded 102 KB

trying URL 'https://bioconductor.org/packages/3.17/bioc/src/contrib/DMRcate_2.14.0.tar.gz'
Content type 'application/x-gzip' length 354608 bytes (346 KB)
==================================================
downloaded 346 KB

* installing *binary* package ‘rematch’ ...
* ‘rematch’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘rematch’ as ‘rematch_1.0.1_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (rematch)
* installing *binary* package ‘BiasedUrn’ ...
* ‘BiasedUrn’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘BiasedUrn’ as ‘BiasedUrn_2.0.10_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (BiasedUrn)
* installing *binary* package ‘ruv’ ...
* ‘ruv’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘ruv’ as ‘ruv_0.9.7.1_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (ruv)
* installing *source* package ‘IlluminaHumanMethylationEPICanno.ilm10b4.hg19’ ...
** using staged installation
** data
*** moving datasets to lazyload DB
** inst
** help
*** installing help indices
** building package indices
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘IlluminaHumanMethylationEPICanno.ilm10b4.hg19’ as ‘IlluminaHumanMethylationEPICanno.ilm10b4.hg19_0.6.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (IlluminaHumanMethylationEPICanno.ilm10b4.hg19)
* installing *source* package ‘FlowSorted.Blood.EPIC’ ...
** using staged installation
** R
** data
*** moving datasets to lazyload DB
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘FlowSorted.Blood.EPIC’ as ‘FlowSorted.Blood.EPIC_2.4.2_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (FlowSorted.Blood.EPIC)
* installing *source* package ‘tissueTreg’ ...
** using staged installation
** inst
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘tissueTreg’ as ‘tissueTreg_1.20.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (tissueTreg)
* installing *binary* package ‘cellranger’ ...
* ‘cellranger’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘cellranger’ as ‘cellranger_1.1.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (cellranger)
* installing *source* package ‘missMethyl’ ...
** using staged installation
** R
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘missMethyl’ as ‘missMethyl_1.34.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (missMethyl)
* installing *binary* package ‘readxl’ ...
* ‘readxl’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘readxl’ as ‘readxl_1.4.3_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (readxl)
* installing *source* package ‘DMRcate’ ...
** using staged installation
** R
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘DMRcate’ as ‘DMRcate_2.14.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (DMRcate)
* installing *source* package ‘DMRcatedata’ ...
** using staged installation
** inst
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘DMRcatedata’ as ‘DMRcatedata_2.18.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (DMRcatedata)

The downloaded source packages are in
	‘/tmp/RtmpbtE6gq/downloaded_packages’
Old packages: 'affy', 'cytolib', 'flowCore', 'RProtoBufLib', 'BiocManager',
  'bslib', 'cachem', 'cpp11', 'curl', 'digest', 'downlit', 'evaluate',
  'httpuv', 'httr', 'httr2', 'jsonlite', 'knitr', 'later', 'openssl',
  'pkgbuild', 'pkgload', 'processx', 'profvis', 'Rcpp', 'rmarkdown',
  'rstudioapi', 'sass', 'shiny', 'sys', 'testthat', 'usethis', 'vctrs',
  'waldo', 'xml2', 'class', 'KernSmooth', 'MASS', 'Matrix', 'mgcv', 'nnet'

real	9m5.346s
user	8m42.723s
sys	0m20.930s
* installing *source* package ‘DMRcatedata’ ...
** using staged installation
** inst
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘DMRcatedata’ as ‘DMRcatedata_2.18.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (DMRcatedata)
* installing *binary* package ‘proxy’ ...
* ‘proxy’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘proxy’ as ‘proxy_0.4-27_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (proxy)
* installing *binary* package ‘locfdr’ ...
* ‘locfdr’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘locfdr’ as ‘locfdr_1.1-8_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (locfdr)
* installing *source* package ‘FlowSorted.CordBlood.450k’ ...
** using staged installation
** data
*** moving datasets to lazyload DB
** inst
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘FlowSorted.CordBlood.450k’ as ‘FlowSorted.CordBlood.450k_1.28.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (FlowSorted.CordBlood.450k)
* installing *source* package ‘FlowSorted.CordBloodNorway.450k’ ...
** using staged installation
** data
*** moving datasets to lazyload DB
** help
*** installing help indices
** building package indices
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘FlowSorted.CordBloodNorway.450k’ as ‘FlowSorted.CordBloodNorway.450k_1.26.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (FlowSorted.CordBloodNorway.450k)
* installing *source* package ‘FlowSorted.Blood.EPIC’ ...
** using staged installation
** R
** data
*** moving datasets to lazyload DB
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘FlowSorted.Blood.EPIC’ as ‘FlowSorted.Blood.EPIC_2.4.2_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (FlowSorted.Blood.EPIC)
* installing *binary* package ‘e1071’ ...
* ‘e1071’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘e1071’ as ‘e1071_1.7-13_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (e1071)
* installing *source* package ‘EpiDISH’ ...
** using staged installation
** R
** data
*** moving datasets to lazyload DB
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘EpiDISH’ as ‘EpiDISH_2.16.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (EpiDISH)
* installing *source* package ‘tissueTreg’ ...
** using staged installation
** inst
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘tissueTreg’ as ‘tissueTreg_1.20.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (tissueTreg)
