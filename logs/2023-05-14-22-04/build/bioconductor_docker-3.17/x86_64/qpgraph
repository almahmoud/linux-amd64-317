+ Rscript -e 'Sys.setenv(BIOCONDUCTOR_USE_CONTAINER_REPOSITORY=FALSE); p <- .libPaths(); p <- c('\''/tmp/tmp/built'\'', p); .libPaths(p); if(BiocManager::install('\''qpgraph'\'', INSTALL_opts = '\''--build'\'', update = TRUE, quiet = FALSE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
'getOption("repos")' replaces Bioconductor standard repositories, see
'help("repositories", package = "BiocManager")' for details.
Replacement repositories:
    CRAN: https://packagemanager.posit.co/cran/__linux__/jammy/latest
Bioconductor version 3.17 (BiocManager 1.30.20), R 4.3.0 (2023-04-21)
Installing package(s) 'qpgraph'
also installing the dependencies ‘mvtnorm’, ‘qtl’

trying URL 'https://packagemanager.posit.co/cran/__linux__/jammy/latest/src/contrib/mvtnorm_1.1-3.tar.gz'
Content type 'binary/octet-stream' length 225527 bytes (220 KB)
==================================================
downloaded 220 KB

trying URL 'https://packagemanager.posit.co/cran/__linux__/jammy/latest/src/contrib/qtl_1.60.tar.gz'
Content type 'binary/octet-stream' length 6077968 bytes (5.8 MB)
==================================================
downloaded 5.8 MB

trying URL 'https://bioconductor.org/packages/3.17/bioc/src/contrib/qpgraph_2.34.2.tar.gz'
Content type 'application/x-gzip' length 2825301 bytes (2.7 MB)
==================================================
downloaded 2.7 MB

* installing *binary* package ‘mvtnorm’ ...
* ‘mvtnorm’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘mvtnorm’ as ‘mvtnorm_1.1-3_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (mvtnorm)
* installing *binary* package ‘qtl’ ...
* ‘qtl’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘qtl’ as ‘qtl_1.60_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (qtl)
* installing *source* package ‘qpgraph’ ...
** using staged installation
checking for gcc... gcc
checking for C compiler default output file name... a.out
checking whether the C compiler works... yes
checking whether we are cross compiling... no
checking for suffix of executables... 
checking for suffix of object files... o
checking whether we are using the GNU C compiler... yes
checking whether gcc accepts -g... yes
checking for gcc option to accept ANSI C... none needed
checking build system type... x86_64-pc-linux-gnu
checking host system type... x86_64-pc-linux-gnu
configure: creating ./config.status
config.status: creating src/Makevars
** libs
using C compiler: ‘gcc (Ubuntu 11.3.0-1ubuntu1~22.04) 11.3.0’
gcc -I"/usr/local/lib/R/include" -DNDEBUG -I/usr/local/include -DUSE_FC_LEN_T  -I/usr/local/include   -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -Wall -pedantic -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c cliquer.c -o cliquer.o
gcc -I"/usr/local/lib/R/include" -DNDEBUG -I/usr/local/include -DUSE_FC_LEN_T  -I/usr/local/include   -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -Wall -pedantic -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c graph.c -o graph.o
gcc -I"/usr/local/lib/R/include" -DNDEBUG -I/usr/local/include -DUSE_FC_LEN_T  -I/usr/local/include   -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -Wall -pedantic -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c qpgraph.c -o qpgraph.o
qpgraph.c:24: warning: "USE_FC_LEN_T" redefined
   24 | #define USE_FC_LEN_T
      | 
<command-line>: note: this is the location of the previous definition
gcc -I"/usr/local/lib/R/include" -DNDEBUG -I/usr/local/include -DUSE_FC_LEN_T  -I/usr/local/include   -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g -Wall -pedantic -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c reorder.c -o reorder.o
gcc -shared -L/usr/local/lib/R/lib -L/usr/local/lib -o qpgraph.so cliquer.o graph.o qpgraph.o reorder.o -llapack -lblas -lgfortran -lm -lquadmath -L/usr/local/lib/R/lib -lR
installing to /tmp/tmp/built/00LOCK-qpgraph/00new/qpgraph/libs
** R
** data
*** moving datasets to lazyload DB
** inst
** byte-compile and prepare package for lazy loading
Creating a generic function for ‘det’ from package ‘Matrix’ in package ‘qpgraph’
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** checking absolute paths in shared objects and dynamic libraries
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘qpgraph’ as ‘qpgraph_2.34.2_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (qpgraph)

The downloaded source packages are in
	‘/tmp/Rtmp1ImGLC/downloaded_packages’
Old packages: 'cachem', 'evaluate', 'httpuv', 'httr', 'httr2', 'later',
  'profvis', 'sass', 'testthat', 'waldo', 'class', 'KernSmooth', 'MASS', 'nnet'

real	0m55.437s
user	0m50.579s
sys	0m2.783s
* installing *source* package ‘org.EcK12.eg.db’ ...
** using staged installation
** R
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘org.EcK12.eg.db’ as ‘org.EcK12.eg.db_3.17.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (org.EcK12.eg.db)
* installing *binary* package ‘rlecuyer’ ...
* ‘rlecuyer’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘rlecuyer’ as ‘rlecuyer_0.3-7_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (rlecuyer)
